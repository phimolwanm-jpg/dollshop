import customtkinter as ctk
# Order object is still needed to structure the data for display
from models import Order 
# Session and Database are accessed via main_app, direct import not strictly needed for UI

class OrderHistoryWindow(ctk.CTkFrame):
    def __init__(self, parent, main_app):
        super().__init__(parent, fg_color="#FFF0F5")  # ‡∏™‡∏µ‡∏ä‡∏°‡∏û‡∏π‡∏≠‡πà‡∏≠‡∏ô
        self.main_app = main_app
        # ‡∏î‡∏∂‡∏á object ‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏à‡∏≤‡∏Å main_app
        self.session = main_app.session 
        self.db = main_app.db
        
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠ UI ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
        self.setup_ui() 

    def on_show(self):
        """
        ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏ô‡∏µ‡πâ: ‡∏•‡∏ö‡∏Ç‡∏≠‡∏á‡πÄ‡∏Å‡πà‡∏≤ ‡∏™‡∏£‡πâ‡∏≤‡∏á UI ‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
        ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏™‡∏î‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏™‡∏°‡∏≠
        """
        # ‡∏•‡∏ö widget ‡πÄ‡∏Å‡πà‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
        for widget in self.winfo_children():
            widget.destroy()
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á UI ‡πÉ‡∏´‡∏°‡πà
        self.setup_ui() 

    def setup_ui(self):
        """‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏≠‡∏á‡∏Ñ‡πå‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö UI ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏Ç‡∏≠‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠"""
        # --- 1. ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡∏¢‡∏≤‡∏¢‡∏ï‡∏±‡∏ß‡∏Ç‡∏≠‡∏á Grid ‡∏´‡∏•‡∏±‡∏Å ---
        # ‡πÉ‡∏´‡πâ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå 0 (‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡πÄ‡∏î‡∏µ‡∏¢‡∏ß) ‡∏Ç‡∏¢‡∏≤‡∏¢‡πÄ‡∏ï‡πá‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏ß‡πâ‡∏≤‡∏á
        self.grid_columnconfigure(0, weight=1) 
        # ‡πÉ‡∏´‡πâ‡πÅ‡∏ñ‡∏ß‡∏ó‡∏µ‡πà 1 (orders_frame_scrollable) ‡∏Ç‡∏¢‡∏≤‡∏¢‡πÄ‡∏ï‡πá‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á
        self.grid_rowconfigure(1, weight=1)    

        # --- 2. ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡πà‡∏ß‡∏ô‡∏´‡∏±‡∏ß (Header) ---
        # (‡∏¢‡πâ‡∏≤‡∏¢‡πÇ‡∏Ñ‡πâ‡∏î‡∏à‡∏≤‡∏Å create_header ‡∏°‡∏≤‡πÑ‡∏ß‡πâ‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ)
        header_frame = ctk.CTkFrame(
            self, # ‡πÉ‡∏™‡πà header ‡∏•‡∏á‡πÉ‡∏ô OrderHistoryWindow (self)
            fg_color="#FFFFFF", 
            corner_radius=0, 
            height=70, 
            border_width=1, 
            border_color="#FFEBEE"
        )
        # ‡∏ß‡∏≤‡∏á header ‡πÅ‡∏ñ‡∏ß‡∏ö‡∏ô‡∏™‡∏∏‡∏î (row=0) ‡∏¢‡∏∑‡∏î‡πÄ‡∏ï‡πá‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏ß‡πâ‡∏≤‡∏á (sticky="ew")
        header_frame.grid(row=0, column=0, sticky="ew", pady=(0, 20)) 
        # ‡πÉ‡∏´‡πâ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå 1 ‡πÉ‡∏ô header ‡∏Ç‡∏¢‡∏≤‡∏¢ (‡∏î‡∏±‡∏ô‡∏õ‡∏∏‡πà‡∏°‡πÑ‡∏õ‡∏Ç‡∏ß‡∏≤)
        header_frame.grid_columnconfigure(1, weight=1) 
        
        # Label ‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏ô‡πâ‡∏≤
        header_title = ctk.CTkLabel(
            header_frame,
            text="üìú ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠",
            font=ctk.CTkFont(size=28, weight="bold"),
            text_color="#FFB6C1"
        )
        header_title.pack(side="left", padx=30, pady=20)
        
        # ‡∏õ‡∏∏‡πà‡∏° "< ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å"
        back_button = ctk.CTkButton(
            header_frame,
            text="< ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å",
            command=lambda: self.main_app.navigate_to('HomeWindow'), # ‡∏Å‡∏î‡πÅ‡∏•‡πâ‡∏ß‡∏Å‡∏•‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤ Home
            fg_color="transparent",
            text_color="#FFB6C1",
            hover_color="#FFE4E1",
            font=ctk.CTkFont(size=14)
        )
        back_button.pack(side="right", padx=30, pady=20)
        # --- ‡∏à‡∏ö‡∏™‡πà‡∏ß‡∏ô Header ---

        # --- 3. ‡∏™‡∏£‡πâ‡∏≤‡∏á Frame ‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤ (‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ Order ‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏î‡πâ) ---
        orders_frame_scrollable = ctk.CTkScrollableFrame(
            self, # ‡πÉ‡∏™‡πà‡πÉ‡∏ô OrderHistoryWindow (self)
            fg_color="transparent",
            scrollbar_button_color="#FFB6C1"
        )
        # ‡∏ß‡∏≤‡∏á‡πÉ‡∏ô‡πÅ‡∏ñ‡∏ß 1 (‡πÉ‡∏ï‡πâ header) ‡∏¢‡∏∑‡∏î‡πÄ‡∏ï‡πá‡∏°‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà (sticky="nsew")
        orders_frame_scrollable.grid(row=1, column=0, sticky="nsew", padx=30, pady=10) 
        
        # --- 4. ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠ ---
        # 4.1 ‡πÄ‡∏≠‡∏≤ user_id ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà login ‡∏≠‡∏¢‡∏π‡πà
        current_user_id = self.session.current_user.user_id 
        # 4.2 ‡πÑ‡∏õ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• order ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏Ç‡∏≠‡∏á user ‡∏ô‡∏µ‡πâ‡∏à‡∏≤‡∏Å DB
        orders_data_list = self.db.get_user_orders(current_user_id) 

        # --- 5. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà ---
        if not orders_data_list:
            # --- ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ: ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏à‡πâ‡∏á ---
            empty_frame = ctk.CTkFrame(orders_frame_scrollable, # ‡πÉ‡∏™‡πà‡πÉ‡∏ô frame ‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏î‡πâ
                                       fg_color="#FFFFFF", 
                                       corner_radius=20, 
                                       border_width=2, 
                                       border_color="#FFEBEE")
            # expand=True, fill="both" ‡πÉ‡∏´‡πâ frame ‡∏ô‡∏µ‡πâ‡∏Ç‡∏¢‡∏≤‡∏¢‡πÄ‡∏ï‡πá‡∏°‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà scrollable frame
            empty_frame.pack(expand=True, fill="both", padx=10, pady=50) 
            
            # ‡πÉ‡∏™‡πà Emoji ‡∏Å‡∏•‡πà‡∏≠‡∏á
            empty_icon = ctk.CTkLabel(
                empty_frame,
                text="üì¶",
                font=ctk.CTkFont(size=60)
            )
            empty_icon.pack(pady=(40, 20))
            
            # ‡πÉ‡∏™‡πà‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏•‡∏±‡∏Å
            empty_text1 = ctk.CTkLabel(
                empty_frame,
                text="‡∏Ñ‡∏∏‡∏ì‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠",
                font=ctk.CTkFont(size=20, weight="bold"),
                text_color="#FFB6C1"
            )
            empty_text1.pack(pady=(0, 10))
            
            # ‡πÉ‡∏™‡πà‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏≠‡∏á
            empty_text2 = ctk.CTkLabel(
                empty_frame,
                text="‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ä‡πâ‡∏≠‡∏õ‡∏õ‡∏¥‡πâ‡∏á‡πÄ‡∏•‡∏¢‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ!",
                font=ctk.CTkFont(size=14),
                text_color="gray50"
            )
            empty_text2.pack(pady=(0, 40))
            # --- ‡∏à‡∏ö‡∏Å‡∏£‡∏ì‡∏µ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥ ---
        else:
            # --- ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥: ‡∏ß‡∏ô‡∏•‡∏π‡∏õ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πå‡∏î‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏•‡∏∞ Order ---
            for order_dictionary in orders_data_list: # order_dictionary ‡πÄ‡∏õ‡πá‡∏ô dict ‡∏à‡∏≤‡∏Å DB
                # ‡πÅ‡∏õ‡∏•‡∏á dict ‡πÄ‡∏õ‡πá‡∏ô Order object (‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡πà‡∏≤‡∏¢‡∏Ç‡∏∂‡πâ‡∏ô)
                order_object = Order.from_dict(order_dictionary) 
                
                # --- ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πå‡∏î‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Order ‡∏ô‡∏µ‡πâ (‡πÇ‡∏Ñ‡πâ‡∏î‡∏à‡∏≤‡∏Å create_order_card ‡πÄ‡∏î‡∏¥‡∏°) ---
                # (‡∏¢‡πâ‡∏≤‡∏¢‡πÇ‡∏Ñ‡πâ‡∏î‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πå‡∏î‡∏°‡∏≤‡πÑ‡∏ß‡πâ‡πÉ‡∏ô loop ‡∏ô‡∏µ‡πâ)
                
                # 1. ‡∏™‡∏£‡πâ‡∏≤‡∏á Frame ‡∏´‡∏•‡∏±‡∏Å‡∏Ç‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πå‡∏î
                order_card = ctk.CTkFrame(
                    orders_frame_scrollable, # ‡πÉ‡∏™‡πà‡∏Å‡∏≤‡∏£‡πå‡∏î‡∏•‡∏á‡πÉ‡∏ô frame ‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏î‡πâ
                    fg_color="#FFFFFF",
                    corner_radius=20,
                    border_width=2,
                    border_color="#FFEBEE"
                )

                # 2. ‡∏™‡∏£‡πâ‡∏≤‡∏á Header ‡∏Ç‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πå‡∏î (‡∏™‡∏µ‡∏ä‡∏°‡∏û‡∏π‡∏≠‡πà‡∏≠‡∏ô)
                card_header = ctk.CTkFrame(order_card, fg_color="#FFE4E1", corner_radius=15)
                card_header.pack(fill="x", padx=15, pady=15) # fill="x" ‡πÉ‡∏´‡πâ‡∏¢‡∏∑‡∏î‡πÄ‡∏ï‡πá‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏ß‡πâ‡∏≤‡∏á
                
                # Frame ‡∏†‡∏≤‡∏¢‡πÉ‡∏ô Header ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏à‡∏±‡∏î‡∏ß‡∏≤‡∏á Label ‡∏ã‡πâ‡∏≤‡∏¢/‡∏Ç‡∏ß‡∏≤
                card_header_content = ctk.CTkFrame(card_header, fg_color="transparent")
                card_header_content.pack(fill="x", padx=15, pady=10)
                
                # Label ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç Order (‡∏ä‡∏¥‡∏î‡∏ã‡πâ‡∏≤‡∏¢)
                order_id_label = ctk.CTkLabel(
                    card_header_content,
                    text=f"üõçÔ∏è ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠ #{order_object.order_id}",
                    font=ctk.CTkFont(size=18, weight="bold"),
                    text_color="#6D4C41"
                )
                order_id_label.pack(side="left")
                
                # Label ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà (‡∏ä‡∏¥‡∏î‡∏Ç‡∏ß‡∏≤)
                order_date_label = ctk.CTkLabel(
                    card_header_content,
                    # ‡πÉ‡∏ä‡πâ format_date() ‡∏à‡∏≤‡∏Å Order object
                    text=f"üìÖ {order_object.format_date()}", 
                    font=ctk.CTkFont(size=14),
                    text_color="#6D4C41"
                )
                order_date_label.pack(side="right")

                # 3. ‡∏™‡∏£‡πâ‡∏≤‡∏á Body ‡∏Ç‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πå‡∏î (Frame ‡πÉ‡∏™)
                card_body_frame = ctk.CTkFrame(order_card, fg_color="transparent")
                card_body_frame.pack(fill="x", padx=20, pady=15)
                # ‡πÅ‡∏ö‡πà‡∏á Body ‡πÄ‡∏õ‡πá‡∏ô 2 ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå: ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå 0 ‡∏Å‡∏ß‡πâ‡∏≤‡∏á 3 ‡∏™‡πà‡∏ß‡∏ô (‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£), ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå 1 ‡∏Å‡∏ß‡πâ‡∏≤‡∏á 1 ‡∏™‡πà‡∏ß‡∏ô (‡∏™‡∏£‡∏∏‡∏õ)
                card_body_frame.grid_columnconfigure(0, weight=3) 
                card_body_frame.grid_columnconfigure(1, weight=1)

                # --- 3.1 ‡∏™‡πà‡∏ß‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ (‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå 0) ---
                items_display_frame = ctk.CTkFrame(card_body_frame, fg_color="#FFF0F5", corner_radius=10)
                # ‡∏ß‡∏≤‡∏á‡πÉ‡∏ô‡πÅ‡∏ñ‡∏ß 0, ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå 0, ‡∏¢‡∏∑‡∏î‡πÄ‡∏ï‡πá‡∏°‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏ô‡∏ß‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏ô‡∏ß‡∏ô‡∏≠‡∏ô (sticky="nsew")
                items_display_frame.grid(row=0, column=0, sticky="nsew", padx=(0, 15)) 
                
                # ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ (‡∏à‡∏≤‡∏Å order_object.items ‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô string)
                # ‡∏ñ‡πâ‡∏≤ order_object.items ‡πÄ‡∏õ‡πá‡∏ô None ‡∏´‡∏£‡∏∑‡∏≠ "" ‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£"
                items_string = order_object.items if order_object.items else "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£" 
                # ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà ", " ‡∏î‡πâ‡∏ß‡∏¢ "\n‚Ä¢ " ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô bullet list
                items_formatted_text = items_string.replace(",", "\n‚Ä¢ ") 
                # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡πÅ‡∏•‡∏∞ bullet ‡πÅ‡∏£‡∏Å
                final_items_text = f"‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤:\n‚Ä¢ {items_formatted_text}" 
                
                # Label ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
                items_label = ctk.CTkLabel(
                    items_display_frame,
                    text=final_items_text,
                    justify="left", # ‡∏à‡∏±‡∏î‡∏ä‡∏¥‡∏î‡∏ã‡πâ‡∏≤‡∏¢
                    anchor="nw",    # ‡πÉ‡∏´‡πâ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏µ‡πà‡∏°‡∏∏‡∏°‡∏ö‡∏ô‡∏ã‡πâ‡∏≤‡∏¢ (North-West)
                    wraplength=500, # ‡∏Å‡∏ß‡πâ‡∏≤‡∏á‡∏™‡∏∏‡∏î 500 ‡∏Å‡πà‡∏≠‡∏ô‡∏Ç‡∏∂‡πâ‡∏ô‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡πÉ‡∏´‡∏°‡πà
                    font=ctk.CTkFont(size=14),
                    text_color="#6D4C41"
                )
                items_label.pack(padx=15, pady=15)

                # --- 3.2 ‡∏™‡πà‡∏ß‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡πÅ‡∏•‡∏∞‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ (‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå 1) ---
                summary_status_frame = ctk.CTkFrame(card_body_frame, fg_color="transparent")
                # ‡∏ß‡∏≤‡∏á‡πÉ‡∏ô‡πÅ‡∏ñ‡∏ß 0, ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå 1, ‡∏ä‡∏¥‡∏î‡∏°‡∏∏‡∏°‡∏ö‡∏ô‡∏Ç‡∏ß‡∏≤ (sticky="ne" North-East)
                summary_status_frame.grid(row=0, column=1, sticky="ne") 
                
                # --- 3.2.1 Frame ‡πÅ‡∏™‡∏î‡∏á‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏° ---
                total_container = ctk.CTkFrame(summary_status_frame, fg_color="#FFF0F5", corner_radius=10)
                total_container.pack(fill="x", pady=(0, 10)) # fill="x" ‡πÉ‡∏´‡πâ‡∏Å‡∏ß‡πâ‡∏≤‡∏á‡πÄ‡∏ó‡πà‡∏≤ summary_frame
                
                # Label "‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°" (‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡πá‡∏Å)
                total_text_label = ctk.CTkLabel(
                    total_container,
                    text="‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°",
                    font=ctk.CTkFont(size=12),
                    text_color="gray50"
                )
                total_text_label.pack(pady=(10, 0))
                
                # Label ‡πÅ‡∏™‡∏î‡∏á‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏° (‡∏ï‡∏±‡∏ß‡πÉ‡∏´‡∏ç‡πà)
                total_value_label = ctk.CTkLabel(
                    total_container,
                    # ‡πÉ‡∏ä‡πâ format_total() ‡∏à‡∏≤‡∏Å Order object
                    text=order_object.format_total(), 
                    font=ctk.CTkFont(size=22, weight="bold"),
                    text_color="#FF6B9D"
                )
                total_value_label.pack(pady=(5, 10))

                # --- 3.2.2 Frame ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ (Badge) ---
                status_badge_frame = ctk.CTkFrame(
                    summary_status_frame,
                    # ‡πÉ‡∏ä‡πâ get_status_color() ‡∏à‡∏≤‡∏Å Order object ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏™‡∏µ‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á
                    fg_color=order_object.get_status_color(), 
                    corner_radius=10
                )
                status_badge_frame.pack(fill="x") # fill="x" ‡πÉ‡∏´‡πâ‡∏Å‡∏ß‡πâ‡∏≤‡∏á‡πÄ‡∏ó‡πà‡∏≤ summary_frame
                
                # Label ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ (‡∏™‡∏µ‡∏Ç‡∏≤‡∏ß)
                status_text_label = ctk.CTkLabel(
                    status_badge_frame,
                    # ‡πÉ‡∏ä‡πâ get_status_text() ‡∏à‡∏≤‡∏Å Order object ‡πÅ‡∏õ‡∏•‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
                    text=order_object.get_status_text(), 
                    font=ctk.CTkFont(size=14, weight="bold"),
                    text_color="white"
                )
                status_text_label.pack(padx=20, pady=10)
                
                # --- 3.2.3 ‡∏õ‡∏∏‡πà‡∏° "‡∏î‡∏π‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à" ---
                view_receipt_button = ctk.CTkButton(
                    summary_status_frame, # ‡πÉ‡∏™‡πà‡πÉ‡∏ô frame ‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°/‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
                    text="üßæ ‡∏î‡∏π‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à",
                    fg_color="#FFB6C1", # ‡∏™‡∏µ‡∏ä‡∏°‡∏û‡∏π
                    hover_color="#FFC0CB",
                    corner_radius=10,
                    height=35,
                    # ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏î ‡πÉ‡∏´‡πâ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ ReceiptWindow ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏™‡πà‡∏á order_id ‡πÑ‡∏õ‡∏î‡πâ‡∏ß‡∏¢
                    # ‡πÉ‡∏ä‡πâ lambda capture (oid=order_object.order_id)
                    command=lambda oid=order_object.order_id: self.main_app.navigate_to('ReceiptWindow', order_id=oid) 
                )
                # ‡∏ß‡∏≤‡∏á‡∏õ‡∏∏‡πà‡∏°‡πÉ‡∏ï‡πâ Status Badge
                view_receipt_button.pack(fill="x", pady=(10, 0)) 
                # --- ‡∏à‡∏ö‡∏™‡πà‡∏ß‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πå‡∏î‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Order ‡∏ô‡∏µ‡πâ ---
                
                # ‡∏ß‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πå‡∏î‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏™‡∏£‡πá‡∏à ‡∏•‡∏á‡πÉ‡∏ô frame ‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏î‡πâ
                order_card.pack(fill="x", pady=10) 
            # --- ‡∏à‡∏ö Loop ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πå‡∏î ---
        # --- ‡∏à‡∏ö‡∏Å‡∏£‡∏ì‡∏µ‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥ ---

    # --- (‡∏•‡∏ö‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô create_header ‡πÅ‡∏•‡∏∞ create_order_card ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏¢‡πâ‡∏≤‡∏¢‡πÇ‡∏Ñ‡πâ‡∏î‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß) ---