import customtkinter as ctk
from models import Order 

class OrderHistoryWindow(ctk.CTkFrame):
    def __init__(self, parent, main_app):
        super().__init__(parent, fg_color="#FFF0F5")  # ‡∏™‡∏µ‡∏ä‡∏°‡∏û‡∏π‡∏≠‡πà‡∏≠‡∏ô
        self.main_app = main_app
        # ‡∏î‡∏∂‡∏á object ‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏à‡∏≤‡∏Å main_app
        self.session = main_app.session 
        self.db = main_app.db
        
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠ UI ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
        self.setup_ui() 

    def on_show(self):
        """
        ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏ô‡∏µ‡πâ: ‡∏•‡∏ö‡∏Ç‡∏≠‡∏á‡πÄ‡∏Å‡πà‡∏≤ ‡∏™‡∏£‡πâ‡∏≤‡∏á UI ‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
        ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏™‡∏î‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏™‡∏°‡∏≠
        """
        # ‡∏•‡∏ö widget ‡πÄ‡∏Å‡πà‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
        for widget in self.winfo_children():
            widget.destroy()
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á UI ‡πÉ‡∏´‡∏°‡πà
        self.setup_ui() 

    def setup_ui(self):
        """‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏≠‡∏á‡∏Ñ‡πå‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö UI ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏Ç‡∏≠‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠"""
        # --- 1. ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡∏¢‡∏≤‡∏¢‡∏ï‡∏±‡∏ß‡∏Ç‡∏≠‡∏á Grid ‡∏´‡∏•‡∏±‡∏Å ---
        self.grid_columnconfigure(0, weight=1) 
        self.grid_rowconfigure(1, weight=1)    

        # --- 2. ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡πà‡∏ß‡∏ô‡∏´‡∏±‡∏ß (Header) ---
        header_frame = ctk.CTkFrame(
            self, 
            fg_color="#FFFFFF", 
            corner_radius=0, 
            height=70, 
            border_width=1, 
            border_color="#FFEBEE"
        )
        header_frame.grid(row=0, column=0, sticky="ew", pady=(0, 20)) 
        header_frame.grid_columnconfigure(1, weight=1) 
        
        header_title = ctk.CTkLabel(
            header_frame,
            text="üìú ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠",
            font=ctk.CTkFont(size=28, weight="bold"),
            text_color="#FFB6C1"
        )
        header_title.pack(side="left", padx=30, pady=20)
        
        back_button = ctk.CTkButton(
            header_frame,
            text="< ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å",
            command=lambda: self.main_app.navigate_to('HomeWindow'), 
            fg_color="transparent",
            text_color="#FFB6C1",
            hover_color="#FFE4E1",
            font=ctk.CTkFont(size=14)
        )
        back_button.pack(side="right", padx=30, pady=20)
        # --- ‡∏à‡∏ö‡∏™‡πà‡∏ß‡∏ô Header ---

        # --- 3. ‡∏™‡∏£‡πâ‡∏≤‡∏á Frame ‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤ (‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ Order ‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏î‡πâ) ---
        orders_frame_scrollable = ctk.CTkScrollableFrame(
            self, 
            fg_color="transparent",
            scrollbar_button_color="#FFB6C1"
        )
        orders_frame_scrollable.grid(row=1, column=0, sticky="nsew", padx=30, pady=10) 
        
        # --- 4. ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠ ---
        # --- ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ ---
        orders_data_list = [] # ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏î‡πâ‡∏ß‡∏¢ list ‡∏ß‡πà‡∏≤‡∏á
        # ‡πÄ‡∏ä‡πá‡∏Ñ‡∏Å‡πà‡∏≠‡∏ô‡∏ß‡πà‡∏≤‡∏°‡∏µ user login ‡∏≠‡∏¢‡∏π‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
        if self.session.is_logged_in(): 
            current_user_id = self.session.current_user.user_id 
            # ‡∏ñ‡πâ‡∏≤ login ‡∏≠‡∏¢‡∏π‡πà ‡∏Ñ‡πà‡∏≠‡∏¢‡πÑ‡∏õ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• order ‡∏à‡∏≤‡∏Å DB
            orders_data_list = self.db.get_user_orders(current_user_id) 
        # --- ‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö ---

        # --- 5. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà ---
        # (‡πÇ‡∏Ñ‡πâ‡∏î‡∏™‡πà‡∏ß‡∏ô‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡πÅ‡∏°‡πâ orders_data_list ‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô list ‡∏ß‡πà‡∏≤‡∏á)
        if not orders_data_list:
            # --- ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ: ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏à‡πâ‡∏á ---
            empty_frame = ctk.CTkFrame(orders_frame_scrollable, 
                                       fg_color="#FFFFFF", 
                                       corner_radius=20, 
                                       border_width=2, 
                                       border_color="#FFEBEE")
            empty_frame.pack(expand=True, fill="both", padx=10, pady=50) 
            
            empty_icon = ctk.CTkLabel(
                empty_frame,
                text="üì¶",
                font=ctk.CTkFont(size=60)
            )
            empty_icon.pack(pady=(40, 20))
            
            empty_text1 = ctk.CTkLabel(
                empty_frame,
                text="‡∏Ñ‡∏∏‡∏ì‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠",
                font=ctk.CTkFont(size=20, weight="bold"),
                text_color="#FFB6C1"
            )
            empty_text1.pack(pady=(0, 10))
            
            empty_text2 = ctk.CTkLabel(
                empty_frame,
                text="‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ä‡πâ‡∏≠‡∏õ‡∏õ‡∏¥‡πâ‡∏á‡πÄ‡∏•‡∏¢‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ!",
                font=ctk.CTkFont(size=14),
                text_color="gray50"
            )
            empty_text2.pack(pady=(0, 40))
            # --- ‡∏à‡∏ö‡∏Å‡∏£‡∏ì‡∏µ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥ ---
        else:
            # --- ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥: ‡∏ß‡∏ô‡∏•‡∏π‡∏õ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πå‡∏î‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏•‡∏∞ Order ---
            for order_dictionary in orders_data_list: 
                order_object = Order.from_dict(order_dictionary) 
                
                # --- ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πå‡∏î‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Order ‡∏ô‡∏µ‡πâ ---
                order_card = ctk.CTkFrame(
                    orders_frame_scrollable, 
                    fg_color="#FFFFFF",
                    corner_radius=20,
                    border_width=2,
                    border_color="#FFEBEE"
                )

                # 2. Header ‡∏Å‡∏≤‡∏£‡πå‡∏î
                card_header = ctk.CTkFrame(order_card, fg_color="#FFE4E1", corner_radius=15)
                card_header.pack(fill="x", padx=15, pady=15) 
                
                card_header_content = ctk.CTkFrame(card_header, fg_color="transparent")
                card_header_content.pack(fill="x", padx=15, pady=10)
                
                order_id_label = ctk.CTkLabel(
                    card_header_content,
                    text=f"üõçÔ∏è ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠ #{order_object.order_id}",
                    font=ctk.CTkFont(size=18, weight="bold"),
                    text_color="#6D4C41"
                )
                order_id_label.pack(side="left")
                
                order_date_label = ctk.CTkLabel(
                    card_header_content,
                    text=f"üìÖ {order_object.format_date()}", 
                    font=ctk.CTkFont(size=14),
                    text_color="#6D4C41"
                )
                order_date_label.pack(side="right")

                # 3. Body ‡∏Å‡∏≤‡∏£‡πå‡∏î
                card_body_frame = ctk.CTkFrame(order_card, fg_color="transparent")
                card_body_frame.pack(fill="x", padx=20, pady=15)
                card_body_frame.grid_columnconfigure(0, weight=3) 
                card_body_frame.grid_columnconfigure(1, weight=1)

                # 3.1 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ (‡∏ã‡πâ‡∏≤‡∏¢)
                items_display_frame = ctk.CTkFrame(card_body_frame, fg_color="#FFF0F5", corner_radius=10)
                items_display_frame.grid(row=0, column=0, sticky="nsew", padx=(0, 15)) 
                
                items_string = order_object.items if order_object.items else "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£" 
                items_formatted_text = items_string.replace(",", "\n‚Ä¢ ") 
                final_items_text = f"‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤:\n‚Ä¢ {items_formatted_text}" 
                
                items_label = ctk.CTkLabel(
                    items_display_frame,
                    text=final_items_text,
                    justify="left", anchor="nw", wraplength=500,
                    font=ctk.CTkFont(size=14), text_color="#6D4C41"
                )
                items_label.pack(padx=15, pady=15)

                # 3.2 ‡∏™‡∏£‡∏∏‡∏õ‡∏¢‡∏≠‡∏î/‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ (‡∏Ç‡∏ß‡∏≤)
                summary_status_frame = ctk.CTkFrame(card_body_frame, fg_color="transparent")
                summary_status_frame.grid(row=0, column=1, sticky="ne") 
                
                # 3.2.1 ‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°
                total_container = ctk.CTkFrame(summary_status_frame, fg_color="#FFF0F5", corner_radius=10)
                total_container.pack(fill="x", pady=(0, 10)) 
                
                total_text_label = ctk.CTkLabel(
                    total_container, text="‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°",
                    font=ctk.CTkFont(size=12), text_color="gray50"
                )
                total_text_label.pack(pady=(10, 0))
                
                total_value_label = ctk.CTkLabel(
                    total_container, text=order_object.format_total(), 
                    font=ctk.CTkFont(size=22, weight="bold"), text_color="#FF6B9D"
                )
                total_value_label.pack(pady=(5, 10))

                # 3.2.2 ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ (Badge)
                status_badge_frame = ctk.CTkFrame(
                    summary_status_frame,
                    fg_color=order_object.get_status_color(), 
                    corner_radius=10
                )
                status_badge_frame.pack(fill="x") 
                
                status_text_label = ctk.CTkLabel(
                    status_badge_frame, text=order_object.get_status_text(), 
                    font=ctk.CTkFont(size=14, weight="bold"), text_color="white"
                )
                status_text_label.pack(padx=20, pady=10)
                
                # 3.2.3 ‡∏õ‡∏∏‡πà‡∏°‡∏î‡∏π‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à
                view_receipt_button = ctk.CTkButton(
                    summary_status_frame, 
                    text="üßæ ‡∏î‡∏π‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à",
                    fg_color="#FFB6C1", hover_color="#FFC0CB",
                    corner_radius=10, height=35,
                    command=lambda oid=order_object.order_id: self.main_app.navigate_to('ReceiptWindow', order_id=oid) 
                )
                view_receipt_button.pack(fill="x", pady=(10, 0)) 
                # --- ‡∏à‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πå‡∏î Order ---
                
                order_card.pack(fill="x", pady=10) 
            # --- ‡∏à‡∏ö Loop ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πå‡∏î ---
        # --- ‡∏à‡∏ö‡∏Å‡∏£‡∏ì‡∏µ‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥ ---