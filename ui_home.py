import customtkinter as ctk
from tkinter import messagebox
from models import Product

class HomeWindow(ctk.CTkFrame):
    def __init__(self, parent, main_app):
        super().__init__(parent, fg_color="#FFF0F5")
        self.main_app = main_app
        self.db = main_app.db
        self.session = main_app.session
        self.cart = main_app.cart
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠ UI ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
        self.setup_ui()

    def on_show(self):
        """
        ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏ô‡∏µ‡πâ: ‡∏•‡∏ö‡∏Ç‡∏≠‡∏á‡πÄ‡∏Å‡πà‡∏≤ ‡∏™‡∏£‡πâ‡∏≤‡∏á UI ‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
        ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ Header (‡∏ä‡∏∑‡πà‡∏≠ user, ‡∏õ‡∏∏‡πà‡∏° admin) ‡πÅ‡∏•‡∏∞‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÄ‡∏™‡∏°‡∏≠
        """
        # ‡∏•‡∏ö widget ‡πÄ‡∏Å‡πà‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
        for widget in self.winfo_children():
            widget.destroy()
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á UI ‡πÉ‡∏´‡∏°‡πà
        self.setup_ui()

    def setup_ui(self):
        # --- 1. ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡∏¢‡∏≤‡∏¢‡∏ï‡∏±‡∏ß‡∏Ç‡∏≠‡∏á Grid ‡∏´‡∏•‡∏±‡∏Å ---
        self.grid_rowconfigure(1, weight=1)
        self.grid_columnconfigure(0, weight=1)

        # --- 2. ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡πà‡∏ß‡∏ô‡∏´‡∏±‡∏ß (Header) ---
        header = ctk.CTkFrame(
            self,
            fg_color="#FFFFFF",
            corner_radius=0,
            height=70,
            border_width=1,
            border_color="#FFEBEE"
        )
        header.grid(row=0, column=0, sticky="ew", pady=(0, 5))
        header.grid_columnconfigure(1, weight=1)

        # --- 2.1 ‡πÉ‡∏™‡πà Logo ‡πÅ‡∏•‡∏∞‡∏ä‡∏∑‡πà‡∏≠‡∏£‡πâ‡∏≤‡∏ô (‡∏ä‡∏¥‡∏î‡∏ã‡πâ‡∏≤‡∏¢) ---
        shop_title_label = ctk.CTkLabel(
            header,
            text="üéÄ Dollie Shop",
            font=("IBM Plex Sans Thai", 24, "bold"),
            text_color="#FFB6C1"
        )
        shop_title_label.pack(side="left", padx=30)

        # --- 2.2 ‡∏™‡∏£‡πâ‡∏≤‡∏á Frame ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö widget ‡∏ó‡∏≤‡∏á‡∏Ç‡∏ß‡∏≤ ---
        right_header_frame = ctk.CTkFrame(header, fg_color="transparent")
        right_header_frame.pack(side="right", padx=20, pady=10)

        # ---  ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö ---
        # --- 2.3 ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö (‡∏ñ‡πâ‡∏≤ Login ‡πÅ‡∏•‡πâ‡∏ß) ---
        if self.session.is_logged_in(): # ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤ login ‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á
            user_full_name = self.session.current_user.full_name
            welcome_text = f"‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ, {user_full_name}"
            welcome_label = ctk.CTkLabel(
                right_header_frame,
                text=welcome_text,
                font=("IBM Plex Sans Thai", 14),
                text_color="#6D4C41"
            )
            welcome_label.pack(side="left", padx=10)

            # --- 2.4 ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô Admin ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà (‡∏ñ‡πâ‡∏≤ Login ‡πÅ‡∏•‡πâ‡∏ß) ---
            is_current_user_admin = self.session.is_admin()
            if is_current_user_admin:
                # --- ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô Admin: ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏õ‡∏∏‡πà‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Admin ---
                admin_dashboard_btn = ctk.CTkButton(
                    right_header_frame,
                    text="üìä Dashboard",
                    fg_color="#4CAF50", hover_color="#66BB6A", text_color="white",
                    font=("IBM Plex Sans Thai", 14, "bold"),
                    corner_radius=15, height=35,
                    command=lambda: self.main_app.navigate_to('AdminDashboardWindow')
                )
                admin_dashboard_btn.pack(side="left", padx=5)

                admin_orders_btn = ctk.CTkButton(
                    right_header_frame,
                    text="üì¶ ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠",
                    fg_color="#2196F3", hover_color="#42A5F5", text_color="white",
                    font=("IBM Plex Sans Thai", 14, "bold"),
                    corner_radius=15, height=35,
                    command=lambda: self.main_app.navigate_to('AdminOrdersWindow')
                )
                admin_orders_btn.pack(side="left", padx=5)

                admin_product_btn = ctk.CTkButton(
                    right_header_frame,
                    text="‚öôÔ∏è ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤",
                    fg_color="#FF6B9D", hover_color="#FF8FB3", text_color="white",
                    font=("IBM Plex Sans Thai", 14, "bold"),
                    corner_radius=15, height=35,
                    command=lambda: self.main_app.navigate_to('AdminWindow')
                )
                admin_product_btn.pack(side="left", padx=5)
            # --- ‡∏à‡∏ö‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç if is_admin ---

            # --- 2.5 ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏õ‡∏∏‡πà‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏ô (‡∏ñ‡πâ‡∏≤ Login ‡πÅ‡∏•‡πâ‡∏ß) ---
            profile_btn = ctk.CTkButton(
                right_header_frame,
                text="‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå",
                fg_color="transparent", hover_color="#FFE4E1", text_color="#6D4C41",
                font=("IBM Plex Sans Thai", 14),
                command=lambda: self.main_app.navigate_to('ProfileWindow')
            )
            profile_btn.pack(side="left", padx=5)

            history_btn = ctk.CTkButton(
                right_header_frame,
                text="‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏ã‡∏∑‡πâ‡∏≠",
                fg_color="transparent", hover_color="#FFE4E1", text_color="#6D4C41",
                font=("IBM Plex Sans Thai", 14),
                command=lambda: self.main_app.navigate_to('OrderHistoryWindow')
            )
            history_btn.pack(side="left", padx=5)

            cart_icon_image = self.main_app.load_image("cart_icon.png", size=(20, 20))
            cart_btn = ctk.CTkButton(
                right_header_frame,
                text="", image=cart_icon_image, width=30,
                fg_color="transparent", hover_color="#FFE4E1",
                command=lambda: self.main_app.navigate_to('CartWindow')
            )
            cart_btn.pack(side="left", padx=5)

            logout_btn = ctk.CTkButton(
                right_header_frame,
                text="‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö",
                width=100, corner_radius=15,
                font=("IBM Plex Sans Thai", 14, "bold"),
                fg_color="#FFB6C1", hover_color="#FFC0CB", text_color="white",
                command=self.main_app.on_logout
            )
            logout_btn.pack(side="left", padx=10)
        # --- ‡∏à‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö if self.session.is_logged_in()---
        # --- (‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ Login ‡∏™‡πà‡∏ß‡∏ô Header ‡∏î‡πâ‡∏≤‡∏ô‡∏Ç‡∏ß‡∏≤‡∏Å‡πá‡∏à‡∏∞‡∏ß‡πà‡∏≤‡∏á‡πÑ‡∏õ) ---
        # --- ‡∏à‡∏ö‡∏™‡πà‡∏ß‡∏ô Header ---

        # --- 3. ‡∏™‡∏£‡πâ‡∏≤‡∏á Frame ‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤ (‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏î‡πâ) ---
        main_content_frame = ctk.CTkScrollableFrame(
            self,
            fg_color="transparent",
            scrollbar_button_color="#FFB6C1"
        )
        main_content_frame.grid(row=1, column=0, sticky="nsew", padx=30, pady=0)
        main_content_frame.grid_columnconfigure(0, weight=1)

        # --- 4. ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡πà‡∏ß‡∏ô Banner ---
        banner_image = self.main_app.load_image("banner.png", size=(2100, 250)) # ‡πÉ‡∏ä‡πâ‡∏Ç‡∏ô‡∏≤‡∏î‡πÄ‡∏î‡∏¥‡∏°‡πÑ‡∏õ‡∏Å‡πà‡∏≠‡∏ô
        banner_label = ctk.CTkLabel(
            main_content_frame,
            text="",
            image=banner_image,
            corner_radius=20
        )
        banner_label.grid(row=0, column=0, sticky="ew", pady=(10, 20))

        # --- 5. ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡πà‡∏ß‡∏ô ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà ---
        category_section_frame = ctk.CTkFrame(main_content_frame, fg_color="transparent")
        category_section_frame.grid(row=1, column=0, sticky="ew", pady=20, padx=10)

        category_title_label = ctk.CTkLabel(
            category_section_frame,
            text="‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏ï‡∏∏‡πä‡∏Å‡∏ï‡∏≤",
            font=("IBM Plex Sans Thai", 20, "bold"),
            text_color="#6D4C41"
        )
        category_title_label.pack(anchor="w")

        category_buttons_frame = ctk.CTkFrame(category_section_frame, fg_color="transparent")
        category_buttons_frame.pack(fill="x", pady=10)

        categories_list = self.db.get_categories()
        category_icons = {
            '‡∏ï‡∏∏‡πä‡∏Å‡∏ï‡∏≤‡∏´‡∏°‡∏µ': 'üß∏', '‡∏ï‡∏∏‡πä‡∏Å‡∏ï‡∏≤‡∏Å‡∏£‡∏∞‡∏ï‡πà‡∏≤‡∏¢': 'üê∞', '‡∏ï‡∏∏‡πä‡∏Å‡∏ï‡∏≤‡πÅ‡∏°‡∏ß': 'üê±',
            '‡∏ï‡∏∏‡πä‡∏Å‡∏ï‡∏≤‡∏ä‡πâ‡∏≤‡∏á': 'üêò', '‡∏ï‡∏∏‡πä‡∏Å‡∏ï‡∏≤‡∏¢‡∏π‡∏ô‡∏¥‡∏Ñ‡∏≠‡∏£‡πå‡∏ô': 'ü¶Ñ', '‡∏ï‡∏∏‡πä‡∏Å‡∏ï‡∏≤‡∏™‡∏∏‡∏ô‡∏±‡∏Ç': 'üê∂',
            '‡∏ï‡∏∏‡πä‡∏Å‡∏ï‡∏≤‡πÑ‡∏î‡πÇ‡∏ô‡πÄ‡∏™‡∏≤‡∏£‡πå': 'ü¶ï'
        }

        for category_name in categories_list:
            icon = category_icons.get(category_name, 'üéÄ')
            category_button = ctk.CTkButton(
                category_buttons_frame,
                text=f"{icon} {category_name}",
                height=40, corner_radius=20,
                font=("IBM Plex Sans Thai", 14, "bold"),
                fg_color="#FFFFFF", border_width=1, border_color="#FFEBEE",
                text_color="#6D4C41", hover_color="#FFE4E1",
                command=lambda c=category_name: self.main_app.navigate_to('ProductListWindow', category=c)
            )
            category_button.pack(side="left", padx=5)

        # --- 6. ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡πà‡∏ß‡∏ô ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥ ---
        recommended_section_container = ctk.CTkFrame(main_content_frame, fg_color="transparent")
        recommended_section_container.grid(row=2, column=0, sticky="nsew", pady=10)

        recommended_title_label = ctk.CTkLabel(
            recommended_section_container,
            text="‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥ ‚ú®",
            font=("IBM Plex Sans Thai", 20, "bold"),
            text_color="#6D4C41"
        )
        recommended_title_label.pack(anchor="w", padx=10)

        products_grid_frame = ctk.CTkFrame(recommended_section_container, fg_color="transparent")
        products_grid_frame.pack(fill="both", expand=True, pady=10)

        recommended_products_data = self.db.get_all_products(limit=8)
        cols = 4

        for i, product_dict in enumerate(recommended_products_data):
            row, col = divmod(i, cols)
            products_grid_frame.grid_columnconfigure(col, weight=1, uniform="prod_card")

            product_object = Product.from_dict(product_dict)
            product_card = ctk.CTkFrame(products_grid_frame,
                                        fg_color="#FFFFFF", corner_radius=15,
                                        border_width=1, border_color="#FFEBEE")

            product_card_image = self.main_app.get_product_image(product_object.image_url)
            image_label_card = ctk.CTkLabel(product_card, text="", image=product_card_image, bg_color="transparent")
            image_label_card.pack(pady=(15, 10))

            name_label_card = ctk.CTkLabel(
                product_card, text=product_object.name,
                font=("IBM Plex Sans Thai", 16, "bold"), text_color="#6D4C41"
            )
            name_label_card.pack(padx=10)

            price_label_card = ctk.CTkLabel(
                product_card, text=product_object.format_price(),
                font=("IBM Plex Sans Thai", 14), text_color="#FFB6C1"
            )
            price_label_card.pack(pady=5)

            add_cart_button_card = ctk.CTkButton(
                product_card, text="‡∏´‡∏¢‡∏¥‡∏ö‡πÉ‡∏™‡πà‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤",
                height=35, corner_radius=10,
                font=("IBM Plex Sans Thai", 14, "bold"),
                fg_color="#FFB6C1", hover_color="#FFC0CB", text_color="white",
                command=lambda p=product_object: self.add_to_cart(p)
            )
            add_cart_button_card.pack(pady=10, padx=15, fill="x")

            product_card.grid(row=row, column=col, padx=10, pady=10, sticky="nsew")

        # --- 7. ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡πà‡∏ß‡∏ô Footer ---
        footer_frame = ctk.CTkFrame(main_content_frame, fg_color="transparent")
        footer_frame.grid(row=3, column=0, sticky="ew", pady=20)

        about_button = ctk.CTkButton(
            footer_frame, text="‚ÑπÔ∏è ‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡πÄ‡∏£‡∏≤ / ‡∏ú‡∏π‡πâ‡∏û‡∏±‡∏í‡∏ô‡∏≤",
            fg_color="transparent", text_color="#FFB6C1", hover_color="#FFE4E1",
            border_width=1, border_color="#FFB6C1", corner_radius=15, height=40,
            font=("IBM Plex Sans Thai", 14),
            command=lambda: self.main_app.navigate_to('AboutWindow')
        )
        about_button.pack(pady=10)

    def add_to_cart(self, product):
        """‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏•‡∏á‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤ ‡πÅ‡∏•‡πâ‡∏ß‡πÅ‡∏™‡∏î‡∏á popup"""
        # --- ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡πà‡∏≠‡∏ô add_to_cart (‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà login) ---
        if not self.session.is_logged_in():
             messagebox.showwarning("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö", "‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏•‡∏á‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤", parent=self)
             # ‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡∏û‡∏≤‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ login ‡πÄ‡∏•‡∏¢‡∏Å‡πá‡πÑ‡∏î‡πâ
             # self.main_app.navigate_to("LoginWindow")
             return # ‡∏´‡∏¢‡∏∏‡∏î‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà login
        # --- ‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö---

        self.cart.add_item(product)
        messagebox.showinfo("‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤", f"‡πÄ‡∏û‡∏¥‡πà‡∏° '{product.name}' ‡∏•‡∏á‡πÉ‡∏ô‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡πÅ‡∏•‡πâ‡∏ß!", parent=self)