import customtkinter as ctk
from tkinter import ttk, messagebox

class AdminOrdersWindow(ctk.CTkFrame):
    def __init__(self, parent, main_app):
        super().__init__(parent, fg_color="#FFF0F5")
        self.main_app = main_app
        self.db = main_app.db
        
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠ UI ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
        self.setup_ui() 
    
    def on_show(self):
        """
        ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏ô‡∏µ‡πâ: ‡∏•‡∏ö‡∏Ç‡∏≠‡∏á‡πÄ‡∏Å‡πà‡∏≤ ‡∏™‡∏£‡πâ‡∏≤‡∏á UI ‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
        ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏™‡∏î‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏™‡∏°‡∏≠
        """
        # ‡∏•‡∏ö widget ‡πÄ‡∏Å‡πà‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
        for widget in self.winfo_children():
            widget.destroy()
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á UI ‡πÉ‡∏´‡∏°‡πà
        self.setup_ui() 
    
    def setup_ui(self):
        # --- 1. ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡∏¢‡∏≤‡∏¢‡∏ï‡∏±‡∏ß‡∏Ç‡∏≠‡∏á Grid ‡∏´‡∏•‡∏±‡∏Å ---
        # ‡πÉ‡∏´‡πâ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå 0 (‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡πÄ‡∏î‡∏µ‡∏¢‡∏ß) ‡∏Ç‡∏¢‡∏≤‡∏¢‡πÄ‡∏ï‡πá‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏ß‡πâ‡∏≤‡∏á
        self.grid_columnconfigure(0, weight=1) 
        # ‡πÉ‡∏´‡πâ‡πÅ‡∏ñ‡∏ß‡∏ó‡∏µ‡πà 1 (main_frame) ‡∏Ç‡∏¢‡∏≤‡∏¢‡πÄ‡∏ï‡πá‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á
        self.grid_rowconfigure(1, weight=1)    

        # --- 2. ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡πà‡∏ß‡∏ô‡∏´‡∏±‡∏ß (Header) ---
        # (‡∏¢‡πâ‡∏≤‡∏¢‡πÇ‡∏Ñ‡πâ‡∏î‡∏à‡∏≤‡∏Å create_header ‡∏°‡∏≤‡πÑ‡∏ß‡πâ‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ)
        header = ctk.CTkFrame(
            self, # ‡πÉ‡∏™‡πà header ‡∏•‡∏á‡πÉ‡∏ô AdminOrdersWindow (self)
            fg_color="#FFFFFF", 
            corner_radius=0, 
            height=70, 
            border_width=1, 
            border_color="#FFEBEE"
        )
        # ‡∏ß‡∏≤‡∏á header ‡πÅ‡∏ñ‡∏ß‡∏ö‡∏ô‡∏™‡∏∏‡∏î (row=0) ‡∏¢‡∏∑‡∏î‡πÄ‡∏ï‡πá‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏ß‡πâ‡∏≤‡∏á (sticky="ew")
        header.grid(row=0, column=0, sticky="ew", pady=(0, 20)) 
        # ‡πÉ‡∏´‡πâ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå 1 ‡πÉ‡∏ô header ‡∏Ç‡∏¢‡∏≤‡∏¢ (‡∏î‡∏±‡∏ô‡∏õ‡∏∏‡πà‡∏°‡πÑ‡∏õ‡∏Ç‡∏ß‡∏≤)
        header.grid_columnconfigure(1, weight=1) 
        
        # Label ‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏ô‡πâ‡∏≤
        header_title = ctk.CTkLabel(
            header,
            text="üì¶ ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠",
            font=ctk.CTkFont(size=28, weight="bold"),
            text_color="#FFB6C1"
        )
        header_title.pack(side="left", padx=30, pady=20)
        
        # Frame ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ß‡∏≤‡∏á‡∏õ‡∏∏‡πà‡∏°‡∏ó‡∏≤‡∏á‡∏Ç‡∏ß‡∏≤
        header_btn_frame = ctk.CTkFrame(header, fg_color="transparent")
        header_btn_frame.pack(side="right", padx=20)
        
        # ‡∏õ‡∏∏‡πà‡∏° "‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å"
        home_btn = ctk.CTkButton(
            header_btn_frame,
            text="üè† ‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å",
            command=lambda: self.main_app.navigate_to('HomeWindow'), # ‡∏Å‡∏î‡πÅ‡∏•‡πâ‡∏ß‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ Home
            fg_color="transparent",
            text_color="#FFB6C1",
            hover_color="#FFE4E1",
            font=ctk.CTkFont(size=14)
        )
        home_btn.pack(side="left", padx=5)
        
        # ‡∏õ‡∏∏‡πà‡∏° "Dashboard"
        dashboard_btn = ctk.CTkButton(
            header_btn_frame,
            text="üìä Dashboard",
            command=lambda: self.main_app.navigate_to('AdminDashboardWindow'), # ‡∏Å‡∏î‡πÅ‡∏•‡πâ‡∏ß‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ Dashboard
            fg_color="#4CAF50", # ‡∏™‡∏µ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß
            hover_color="#66BB6A",
            font=ctk.CTkFont(size=14)
        )
        dashboard_btn.pack(side="left", padx=5)
        # --- ‡∏à‡∏ö‡∏™‡πà‡∏ß‡∏ô Header ---
        
        # --- 3. ‡∏™‡∏£‡πâ‡∏≤‡∏á Frame ‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤ (‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÅ‡∏•‡∏∞‡∏õ‡∏∏‡πà‡∏°) ---
        main_frame = ctk.CTkFrame(
            self, # ‡πÉ‡∏™‡πà main_frame ‡πÉ‡∏ô AdminOrdersWindow (self)
            fg_color="#FFFFFF", 
            corner_radius=20, 
            border_width=2, 
            border_color="#FFEBEE"
        )
        # ‡∏ß‡∏≤‡∏á main_frame ‡πÉ‡∏ô‡πÅ‡∏ñ‡∏ß 1 (‡πÉ‡∏ï‡πâ header) ‡∏¢‡∏∑‡∏î‡πÄ‡∏ï‡πá‡∏°‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà (sticky="nsew")
        main_frame.grid(row=1, column=0, sticky="nsew", padx=30, pady=20) 
        # ‡πÉ‡∏´‡πâ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå 0 ‡πÉ‡∏ô main_frame ‡∏Ç‡∏¢‡∏≤‡∏¢‡πÄ‡∏ï‡πá‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏ß‡πâ‡∏≤‡∏á
        main_frame.grid_columnconfigure(0, weight=1) 
        # ‡πÉ‡∏´‡πâ‡πÅ‡∏ñ‡∏ß‡∏ó‡∏µ‡πà 1 (tree_frame) ‡πÉ‡∏ô main_frame ‡∏Ç‡∏¢‡∏≤‡∏¢‡πÄ‡∏ï‡πá‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á
        main_frame.grid_rowconfigure(1, weight=1) 
        
        # --- 3.1 ‡∏™‡∏£‡πâ‡∏≤‡∏á Title ‡∏Ç‡∏≠‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á ---
        title_frame = ctk.CTkFrame(main_frame, fg_color="#FFE4E1", corner_radius=15)
        # ‡∏ß‡∏≤‡∏á title_frame ‡πÉ‡∏ô‡πÅ‡∏ñ‡∏ß 0 ‡∏Ç‡∏≠‡∏á main_frame ‡∏¢‡∏∑‡∏î‡πÄ‡∏ï‡πá‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏ß‡πâ‡∏≤‡∏á
        title_frame.grid(row=0, column=0, sticky="ew", padx=20, pady=20) 
        
        title_label = ctk.CTkLabel(
            title_frame,
            text="üìã ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î",
            font=ctk.CTkFont(size=20, weight="bold"),
            text_color="#6D4C41"
        )
        title_label.pack(pady=15)
        
        # --- 3.2 ‡∏™‡∏£‡πâ‡∏≤‡∏á Frame ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏≤‡∏£‡∏≤‡∏á Treeview ‡πÅ‡∏•‡∏∞ Scrollbar ---
        # (‡∏¢‡πâ‡∏≤‡∏¢‡πÇ‡∏Ñ‡πâ‡∏î‡∏™‡πà‡∏ß‡∏ô‡πÉ‡∏´‡∏ç‡πà‡∏à‡∏≤‡∏Å create_orders_table ‡∏°‡∏≤‡πÑ‡∏ß‡πâ‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ)
        tree_frame = ctk.CTkFrame(main_frame, fg_color="transparent")
        # ‡∏ß‡∏≤‡∏á tree_frame ‡πÉ‡∏ô‡πÅ‡∏ñ‡∏ß 1 ‡∏Ç‡∏≠‡∏á main_frame ‡∏¢‡∏∑‡∏î‡πÄ‡∏ï‡πá‡∏°‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà
        tree_frame.grid(row=1, column=0, sticky="nsew", padx=20, pady=(0, 20)) 
        # ‡πÉ‡∏´‡πâ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå 0 (‡∏ï‡∏≤‡∏£‡∏≤‡∏á) ‡∏Ç‡∏¢‡∏≤‡∏¢‡πÄ‡∏ï‡πá‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏ß‡πâ‡∏≤‡∏á
        tree_frame.grid_columnconfigure(0, weight=1) 
        # ‡πÉ‡∏´‡πâ‡πÅ‡∏ñ‡∏ß 0 (‡∏ï‡∏≤‡∏£‡∏≤‡∏á) ‡∏Ç‡∏¢‡∏≤‡∏¢‡πÄ‡∏ï‡πá‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á
        tree_frame.grid_rowconfigure(0, weight=1) 
        
        # --- 3.2.1 ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Style ‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö‡∏ï‡∏≤‡∏£‡∏≤‡∏á ---
        style = ttk.Style()
        # ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ font ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á‡∏Ç‡∏≠‡∏á‡πÅ‡∏ñ‡∏ß
        style.configure("Orders.Treeview", rowheight=40, font=('Arial', 12)) 
        # ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ font ‡∏Ç‡∏≠‡∏á‡∏´‡∏±‡∏ß‡∏ï‡∏≤‡∏£‡∏≤‡∏á
        style.configure("Orders.Treeview.Heading", font=('Arial', 13, 'bold')) 
        
        # --- 3.2.2 ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á Treeview ---
        # ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ä‡∏∑‡πà‡∏≠‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏†‡∏≤‡∏¢‡πÉ‡∏ô (Internal names)
        columns = ("order_id", "customer", "amount", "payment", "status", "date") 
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á Treeview ‡πÉ‡∏™‡πà‡πÉ‡∏ô tree_frame
        self.tree = ttk.Treeview(tree_frame, 
                                 columns=columns, 
                                 show="headings", # ‡πÑ‡∏°‡πà‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå #0 (Tree column)
                                 style="Orders.Treeview") # ‡πÉ‡∏ä‡πâ style ‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÑ‡∏ß‡πâ
        
        # --- 3.2.3 ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏´‡∏±‡∏ß‡∏ï‡∏≤‡∏£‡∏≤‡∏á (‡∏ó‡∏µ‡πà‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•) ---
        self.tree.heading("order_id", text="Order ID")
        self.tree.heading("customer", text="‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤")
        self.tree.heading("amount", text="‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô")
        self.tree.heading("payment", text="‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô")
        self.tree.heading("status", text="‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞")
        self.tree.heading("date", text="‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà")
        
        # --- 3.2.4 ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏ß‡πâ‡∏≤‡∏á ‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏á (Alignment) ‡∏Ç‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå ---
        self.tree.column("order_id", width=80, anchor="center") # center ‡∏Ñ‡∏∑‡∏≠‡∏ï‡∏£‡∏á‡∏Å‡∏•‡∏≤‡∏á
        self.tree.column("customer", width=200, anchor="w")    # w ‡∏Ñ‡∏∑‡∏≠‡∏ä‡∏¥‡∏î‡∏ã‡πâ‡∏≤‡∏¢ (West)
        self.tree.column("amount", width=120, anchor="e")    # e ‡∏Ñ‡∏∑‡∏≠‡∏ä‡∏¥‡∏î‡∏Ç‡∏ß‡∏≤ (East)
        self.tree.column("payment", width=150, anchor="w")
        self.tree.column("status", width=120, anchor="center")
        self.tree.column("date", width=150, anchor="center")
        
        # --- 3.2.5 ‡∏™‡∏£‡πâ‡∏≤‡∏á Scrollbar ---
        scrollbar = ttk.Scrollbar(tree_frame, orient="vertical", command=self.tree.yview)
        # ‡∏ú‡∏π‡∏Å scrollbar ‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏±‡∏ö treeview
        self.tree.configure(yscrollcommand=scrollbar.set) 
        
        # ‡∏ß‡∏≤‡∏á treeview ‡πÅ‡∏•‡∏∞ scrollbar ‡∏•‡∏á‡πÉ‡∏ô tree_frame ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ grid
        self.tree.grid(row=0, column=0, sticky="nsew") # ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏≠‡∏¢‡∏π‡πà ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå 0
        scrollbar.grid(row=0, column=1, sticky="ns") # scrollbar ‡∏≠‡∏¢‡∏π‡πà ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå 1, ‡∏¢‡∏∑‡∏î‡πÅ‡∏ô‡∏ß‡∏ï‡∏±‡πâ‡∏á (ns)
        
        # --- 3.2.6 ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏™‡πà‡∏ï‡∏≤‡∏£‡∏≤‡∏á (‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô load_orders) ---
        self.load_orders() 
        
        # --- 3.3 ‡∏™‡∏£‡πâ‡∏≤‡∏á Frame ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ß‡∏≤‡∏á‡∏õ‡∏∏‡πà‡∏°‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏° ---
        action_btn_frame = ctk.CTkFrame(main_frame, fg_color="transparent")
        # ‡∏ß‡∏≤‡∏á action_btn_frame ‡πÉ‡∏ô‡πÅ‡∏ñ‡∏ß 2 (‡πÉ‡∏ï‡πâ‡∏ï‡∏≤‡∏£‡∏≤‡∏á) ‡∏Ç‡∏≠‡∏á main_frame
        action_btn_frame.grid(row=2, column=0, sticky="ew", padx=20, pady=(0, 20)) 
        
        # --- 3.3.1 ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏õ‡∏∏‡πà‡∏° "‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠" ---
        confirm_button = ctk.CTkButton(
            action_btn_frame,
            text="‚úÖ ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠",
            # ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° ‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô change_status ‡πÇ‡∏î‡∏¢‡∏™‡πà‡∏á 'confirmed' ‡πÑ‡∏õ
            command=lambda: self.change_status("confirmed"), 
            fg_color="#4CAF50", # ‡∏™‡∏µ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß
            hover_color="#66BB6A",
            height=40,
            corner_radius=10,
            font=ctk.CTkFont(size=14, weight="bold")
        )
        # ‡πÉ‡∏ä‡πâ pack ‡∏ß‡∏≤‡∏á‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏Å‡∏±‡∏ô‡πÉ‡∏ô action_btn_frame
        # fill="x" ‡πÉ‡∏´‡πâ‡∏õ‡∏∏‡πà‡∏°‡∏¢‡∏∑‡∏î‡πÄ‡∏ï‡πá‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏ß‡πâ‡∏≤‡∏á, expand=True ‡πÉ‡∏´‡πâ‡πÅ‡∏ö‡πà‡∏á‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏ó‡πà‡∏≤‡πÜ ‡∏Å‡∏±‡∏ô
        confirm_button.pack(side="left", padx=5, fill="x", expand=True) 
        
        # --- 3.3.2 ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏õ‡∏∏‡πà‡∏° "‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏à‡∏±‡∏î‡∏™‡πà‡∏á" ---
        ship_button = ctk.CTkButton(
            action_btn_frame,
            text="üöö ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏à‡∏±‡∏î‡∏™‡πà‡∏á",
            command=lambda: self.change_status("shipped"), # ‡∏™‡πà‡∏á 'shipped'
            fg_color="#2196F3", # ‡∏™‡∏µ‡∏ü‡πâ‡∏≤
            hover_color="#42A5F5",
            height=40,
            corner_radius=10,
            font=ctk.CTkFont(size=14, weight="bold")
        )
        ship_button.pack(side="left", padx=5, fill="x", expand=True)
        
        # --- 3.3.3 ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏õ‡∏∏‡πà‡∏° "‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à" ---
        deliver_button = ctk.CTkButton(
            action_btn_frame,
            text="‚úîÔ∏è ‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à",
            command=lambda: self.change_status("delivered"), # ‡∏™‡πà‡∏á 'delivered'
            fg_color="#FF9800", # ‡∏™‡∏µ‡∏™‡πâ‡∏°
            hover_color="#FFA726",
            height=40,
            corner_radius=10,
            font=ctk.CTkFont(size=14, weight="bold")
        )
        deliver_button.pack(side="left", padx=5, fill="x", expand=True)
        
        # --- 3.3.4 ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏õ‡∏∏‡πà‡∏° "‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä" ---
        refresh_button = ctk.CTkButton(
            action_btn_frame,
            text="üîÑ ‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä",
            command=self.on_show, # ‡∏Å‡∏î‡πÅ‡∏•‡πâ‡∏ß‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å on_show (‡∏•‡∏ö+‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà)
            fg_color="#FFB6C1", # ‡∏™‡∏µ‡∏ä‡∏°‡∏û‡∏π
            hover_color="#FFC0CB",
            height=40,
            corner_radius=10,
            font=ctk.CTkFont(size=14, weight="bold")
        )
        refresh_button.pack(side="left", padx=5, fill="x", expand=True)
        # --- ‡∏à‡∏ö‡∏™‡πà‡∏ß‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á UI ---

    # --- (‡∏•‡∏ö‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô create_header ‡πÅ‡∏•‡∏∞ create_orders_table ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏¢‡πâ‡∏≤‡∏¢‡πÇ‡∏Ñ‡πâ‡∏î‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß) ---
    
    def load_orders(self):
        """‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏°‡∏≤‡πÉ‡∏™‡πà‡∏ï‡∏≤‡∏£‡∏≤‡∏á"""
        # --- 1. ‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡πà‡∏≤‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏Å‡πà‡∏≠‡∏ô ---
        # tree.get_children() ‡∏à‡∏∞‡πÑ‡∏î‡πâ id ‡∏Ç‡∏≠‡∏á‡∏ó‡∏∏‡∏Å‡πÅ‡∏ñ‡∏ß‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á
        for item_id in self.tree.get_children():
            self.tree.delete(item_id) # ‡∏•‡∏ö‡πÅ‡∏ñ‡∏ß‡∏î‡πâ‡∏ß‡∏¢ id
        
        # --- 2. ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏à‡∏≤‡∏Å DB ---
        orders_data = self.db.get_all_orders()
        
        # --- 3. ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢ ---
        status_text_map = {
            'pending': '‚è≥ ‡∏£‡∏≠‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£',
            'confirmed': '‚úÖ ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÅ‡∏•‡πâ‡∏ß',
            'shipped': 'üöö ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏à‡∏±‡∏î‡∏™‡πà‡∏á',
            'delivered': '‚úîÔ∏è ‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à',
            'cancelled': '‚ùå ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å'
        }
        
        # --- 4. ‡∏ß‡∏ô‡∏•‡∏π‡∏õ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡∏•‡∏∞‡πÅ‡∏ñ‡∏ß ---
        for order in orders_data:
            # ‡πÅ‡∏õ‡∏•‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢ (‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ key ‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡πÄ‡∏î‡∏¥‡∏°)
            status_display = status_text_map.get(order['status'], order['status'])
            
            # ‡∏ï‡∏±‡∏î‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ‡∏Ç‡∏≠‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏≠‡∏Å
            order_date = order['created_at']
            if order_date:
                order_date = order_date[:16] # ‡πÄ‡∏≠‡∏≤‡πÅ‡∏Ñ‡πà YYYY-MM-DD HH:MM
            else:
                order_date = '-'
                
            # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÅ‡∏ñ‡∏ß‡πÉ‡∏´‡∏°‡πà‡∏•‡∏á‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á
            self.tree.insert(
                "",          # parent item (‡∏ß‡πà‡∏≤‡∏á‡∏Ñ‡∏∑‡∏≠‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ö‡∏ô‡∏™‡∏∏‡∏î)
                "end",       # ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á (‡∏ï‡πà‡∏≠‡∏ó‡πâ‡∏≤‡∏¢‡∏™‡∏∏‡∏î)
                values=(     # ‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÉ‡∏™‡πà‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå (‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏•‡∏≥‡∏î‡∏±‡∏ö‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å)
                    f"#{order['order_id']}",         # ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå 0: order_id
                    order['full_name'],              # ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå 1: customer
                    f"‡∏ø{order['total_amount']:,.2f}", # ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå 2: amount (‡∏à‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö)
                    order['payment_method'],         # ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå 3: payment
                    status_display,                  # ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå 4: status (‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢)
                    order_date                       # ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå 5: date (‡∏ï‡∏±‡∏î‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ)
                )
            )
    
    def change_status(self, new_status):
        """‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á"""
        # --- 1. ‡πÄ‡∏≠‡∏≤ ID ‡∏Ç‡∏≠‡∏á‡πÅ‡∏ñ‡∏ß‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡πÄ‡∏•‡∏∑‡∏≠‡∏Å ---
        # self.tree.selection() ‡∏à‡∏∞‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤ tuple ‡∏Ç‡∏≠‡∏á id ‡πÅ‡∏ñ‡∏ß‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å (‡∏≠‡∏≤‡∏à‡∏°‡∏µ‡∏´‡∏•‡∏≤‡∏¢‡πÅ‡∏ñ‡∏ß)
        selected_item_ids = self.tree.selection() 
        
        # --- 2. ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÅ‡∏ñ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà ---
        if not selected_item_ids:
            # ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å ‡πÉ‡∏´‡πâ‡πÅ‡∏™‡∏î‡∏á popup ‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô ‡πÅ‡∏•‡πâ‡∏ß‡∏à‡∏ö‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô
            messagebox.showwarning("‡∏Ñ‡∏≥‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô", "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞", parent=self)
            return 
        
        # --- 3. ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö popup ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô ---
        status_names_map = {
            'confirmed': '‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠',
            'shipped': '‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏à‡∏±‡∏î‡∏™‡πà‡∏á',
            'delivered': '‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à',
            'cancelled': '‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å' # ‡πÄ‡∏ú‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏õ‡∏∏‡πà‡∏°‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡πÉ‡∏ô‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï
        }
        # ‡πÅ‡∏õ‡∏•‡∏á new_status ‡πÄ‡∏õ‡πá‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢ (‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ ‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ new_status ‡πÄ‡∏î‡∏¥‡∏°)
        status_name_thai = status_names_map.get(new_status, new_status)
        confirm_message = f"‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏õ‡πá‡∏ô '{status_name_thai}' ‡πÉ‡∏ä‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?"
        
        # --- 4. ‡πÅ‡∏™‡∏î‡∏á popup ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô (askyesno ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤ True ‡∏ñ‡πâ‡∏≤‡∏Å‡∏î Yes) ---
        user_confirmed = messagebox.askyesno("‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô", confirm_message, parent=self)
        
        # --- 5. ‡∏ñ‡πâ‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏Å‡∏î Yes ---
        if user_confirmed:
            # ‡∏ß‡∏ô‡∏•‡∏π‡∏õ‡πÄ‡∏ú‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏•‡∏≤‡∏¢‡πÅ‡∏ñ‡∏ß
            for item_id in selected_item_ids:
                # ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡πÅ‡∏ñ‡∏ß‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å (‡∏à‡∏≤‡∏Å Treeview)
                item_values = self.tree.item(item_id)['values']
                # Order ID ‡∏≠‡∏¢‡∏π‡πà‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡πÅ‡∏£‡∏Å (index 0), ‡∏°‡∏µ # ‡∏ô‡∏≥‡∏´‡∏ô‡πâ‡∏≤
                order_id_str = item_values[0] 
                # ‡πÄ‡∏≠‡∏≤ # ‡∏≠‡∏≠‡∏Å ‡πÅ‡∏•‡πâ‡∏ß‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç int
                order_id = int(order_id_str.replace('#', '')) 
                
                # --- 6. ‡∏™‡∏±‡πà‡∏á‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÉ‡∏ô DB ---
                success = self.db.update_order_status(order_id, new_status)
                
                # --- 7. ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå ---
                if success:
                    # ‡∏ñ‡πâ‡∏≤‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‡πÅ‡∏™‡∏î‡∏á popup ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô (‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß ‡∏≠‡∏≤‡∏à‡πÄ‡∏≠‡∏≤‡∏≠‡∏≠‡∏Å‡∏ñ‡πâ‡∏≤‡∏°‡∏±‡∏ô‡∏£‡∏Å‡πÑ‡∏õ)
                    # messagebox.showinfo("‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", f"‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠ #{order_id} ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢", parent=self)
                    pass # ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏™‡∏î‡∏á popup ‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏Å‡πá‡πÑ‡∏î‡πâ
                else:
                    # ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‡πÅ‡∏™‡∏î‡∏á popup error
                    messagebox.showerror("‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î", f"‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠ #{order_id} ‡πÑ‡∏î‡πâ", parent=self)
            
            # --- 8. ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÄ‡∏´‡πá‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÑ‡∏õ ---
            self.load_orders()