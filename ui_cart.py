import customtkinter as ctk
# CartItem ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ñ‡∏π‡∏Å *‡πÉ‡∏ä‡πâ* ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á‡πÉ‡∏ô UI ‡πÅ‡∏•‡πâ‡∏ß ‡πÅ‡∏ï‡πà import ‡πÑ‡∏ß‡πâ‡πÄ‡∏ú‡∏∑‡πà‡∏≠ (‡∏ï‡∏≤‡∏°‡∏™‡πÑ‡∏ï‡∏•‡πå‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô)
from models import CartItem 
from tkinter import messagebox

class CartWindow(ctk.CTkFrame):
    def __init__(self, parent, main_app):
        super().__init__(parent, fg_color="#FFF0F5")  # ‡∏™‡∏µ‡∏ä‡∏°‡∏û‡∏π‡∏≠‡πà‡∏≠‡∏ô
        self.main_app = main_app
        self.cart = main_app.cart

        # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠ UI ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
        self.setup_ui() 

    def on_show(self):
        """
        ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏ô‡∏µ‡πâ: ‡∏•‡∏ö‡∏Ç‡∏≠‡∏á‡πÄ‡∏Å‡πà‡∏≤ ‡∏™‡∏£‡πâ‡∏≤‡∏á UI ‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
        ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÅ‡∏•‡∏∞‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÄ‡∏™‡∏°‡∏≠
        """
        # ‡∏•‡∏ö widget ‡πÄ‡∏Å‡πà‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
        for widget in self.winfo_children():
            widget.destroy()
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á UI ‡πÉ‡∏´‡∏°‡πà
        self.setup_ui() 

    def setup_ui(self):
        """‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏≠‡∏á‡∏Ñ‡πå‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏Ç‡∏≠‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"""
        # --- 1. ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡∏¢‡∏≤‡∏¢‡∏ï‡∏±‡∏ß‡∏Ç‡∏≠‡∏á Grid ‡∏´‡∏•‡∏±‡∏Å ---
        # ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå 0 (‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤) ‡∏Å‡∏ß‡πâ‡∏≤‡∏á 3 ‡∏™‡πà‡∏ß‡∏ô
        self.grid_columnconfigure(0, weight=3) 
        # ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå 1 (‡∏™‡∏£‡∏∏‡∏õ‡∏¢‡∏≠‡∏î) ‡∏Å‡∏ß‡πâ‡∏≤‡∏á 1 ‡∏™‡πà‡∏ß‡∏ô
        self.grid_columnconfigure(1, weight=1) 
        # ‡πÅ‡∏ñ‡∏ß‡∏ó‡∏µ‡πà 1 (‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏´‡∏•‡∏±‡∏Å) ‡πÉ‡∏´‡πâ‡∏Ç‡∏¢‡∏≤‡∏¢‡∏ï‡∏≤‡∏°‡πÅ‡∏ô‡∏ß‡∏ï‡∏±‡πâ‡∏á
        self.grid_rowconfigure(1, weight=1)    

        # --- 2. ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡πà‡∏ß‡∏ô‡∏´‡∏±‡∏ß (Header) ---
        header_frame = ctk.CTkFrame(self, fg_color="#FFFFFF", corner_radius=0, height=70, border_width=1, border_color="#FFEBEE")
        # ‡∏ß‡∏≤‡∏á header ‡πÅ‡∏ñ‡∏ß‡∏ö‡∏ô‡∏™‡∏∏‡∏î (row=0) ‡∏Å‡∏¥‡∏ô‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà 2 ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå (columnspan=2) ‡∏¢‡∏∑‡∏î‡πÄ‡∏ï‡πá‡∏°‡∏Å‡∏ß‡πâ‡∏≤‡∏á (sticky="ew")
        header_frame.grid(row=0, column=0, columnspan=2, sticky="ew", pady=(0, 20)) 
        # ‡πÉ‡∏´‡πâ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå 1 ‡πÉ‡∏ô header ‡∏Ç‡∏¢‡∏≤‡∏¢ (‡∏î‡∏±‡∏ô‡∏õ‡∏∏‡πà‡∏°‡πÑ‡∏õ‡∏Ç‡∏ß‡∏≤)
        header_frame.grid_columnconfigure(1, weight=1) 
        
        # Label ‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏ô‡πâ‡∏≤
        header_title = ctk.CTkLabel(
            header_frame, 
            text="üõí ‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì", 
            font=ctk.CTkFont(size=28, weight="bold"),
            text_color="#FFB6C1"
        )
        header_title.pack(side="left", padx=30, pady=20)
        
        # ‡∏õ‡∏∏‡πà‡∏° "< ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏ä‡πâ‡∏≠‡∏õ‡∏ï‡πà‡∏≠"
        back_btn = ctk.CTkButton(
            header_frame,
            text="< ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏ä‡πâ‡∏≠‡∏õ‡∏ï‡πà‡∏≠",
            fg_color="transparent",
            text_color="#FFB6C1",
            hover_color="#FFE4E1",
            font=ctk.CTkFont(size=14),
            command=lambda: self.main_app.navigate_to('HomeWindow') # ‡∏Å‡∏î‡πÅ‡∏•‡πâ‡∏ß‡∏Å‡∏•‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤ Home
        )
        back_btn.pack(side="right", padx=30, pady=20)
        # --- ‡∏à‡∏ö‡∏™‡πà‡∏ß‡∏ô Header ---

        # --- 3. ‡∏™‡∏£‡πâ‡∏≤‡∏á Panel ‡∏î‡πâ‡∏≤‡∏ô‡∏ã‡πâ‡∏≤‡∏¢ (‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤) ---
        left_panel = ctk.CTkFrame(self, fg_color="transparent")
        # ‡∏ß‡∏≤‡∏á left_panel ‡πÉ‡∏ô‡πÅ‡∏ñ‡∏ß 1, ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå 0 ‡∏¢‡∏∑‡∏î‡πÄ‡∏ï‡πá‡∏°‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà
        left_panel.grid(row=1, column=0, sticky="nsew", padx=(30, 10), pady=10) 

        # --- 3.1 ‡∏™‡∏£‡πâ‡∏≤‡∏á Frame ‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏î‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÉ‡∏™‡πà‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ ---
        items_frame_scrollable = ctk.CTkScrollableFrame(
            left_panel, # ‡πÉ‡∏™‡πà‡πÉ‡∏ô left_panel
            fg_color="transparent", 
            corner_radius=15,
            scrollbar_button_color="#FFB6C1"
        )
        items_frame_scrollable.pack(expand=True, fill="both") # ‡πÉ‡∏´‡πâ‡∏Ç‡∏¢‡∏≤‡∏¢‡πÄ‡∏ï‡πá‡∏° left_panel

        # --- 3.2 ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤ ---
        cart_items_list = self.cart.get_items() 

        # --- 3.3 ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏ß‡πà‡∏≤‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà ---
        if not cart_items_list:
            # --- ‡∏ñ‡πâ‡∏≤‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏ß‡πà‡∏≤‡∏á: ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° ---
            empty_frame = ctk.CTkFrame(items_frame_scrollable, # ‡πÉ‡∏™‡πà‡πÉ‡∏ô frame ‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏î‡πâ
                                       fg_color="#FFFFFF", 
                                       corner_radius=20, 
                                       border_width=2, 
                                       border_color="#FFEBEE")
            empty_frame.pack(expand=True, fill="both", padx=10, pady=10)
            
            empty_label = ctk.CTkLabel(
                empty_frame, 
                text="üõçÔ∏è ‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏õ‡∏•‡πà‡∏≤", 
                font=ctk.CTkFont(size=20, weight="bold"),
                text_color="#FFB6C1"
            )
            # expand=True ‡πÉ‡∏´‡πâ label ‡∏≠‡∏¢‡∏π‡πà‡∏Å‡∏•‡∏≤‡∏á frame
            empty_label.pack(expand=True, pady=40) 
            # --- ‡∏à‡∏ö‡∏Å‡∏£‡∏ì‡∏µ‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏ß‡πà‡∏≤‡∏á ---
        else:
            # --- ‡∏ñ‡πâ‡∏≤‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏á: ‡∏ß‡∏ô‡∏•‡∏π‡∏õ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πå‡∏î‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ ---
            for item_data in cart_items_list: # item_data ‡∏Ñ‡∏∑‡∏≠ CartItem object
                # --- ‡∏™‡∏£‡πâ‡∏≤‡∏á Widget ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ 1 ‡∏ä‡∏¥‡πâ‡∏ô---
                
                # ‡∏Å‡∏≤‡∏£‡πå‡∏î‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ 1 ‡∏ä‡∏¥‡πâ‡∏ô
                item_card = ctk.CTkFrame(
                    items_frame_scrollable, # ‡πÉ‡∏™‡πà‡∏Å‡∏≤‡∏£‡πå‡∏î‡∏•‡∏á‡πÉ‡∏ô frame ‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏î‡πâ
                    fg_color="#FFFFFF", 
                    corner_radius=15, 
                    height=120, # ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á‡∏Ç‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πå‡∏î
                    border_width=2,
                    border_color="#FFEBEE"
                )

                # --- ‡∏™‡πà‡∏ß‡∏ô‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û (‡∏ã‡πâ‡∏≤‡∏¢‡∏™‡∏∏‡∏î) ---
                # ‡πÉ‡∏ä‡πâ main_app.get_product_image 
                product_image = self.main_app.get_product_image(item_data.product.image_url, size=(100,100)) 
                image_label = ctk.CTkLabel(item_card, text="", image=product_image)
                image_label.pack(side="left", padx=15, pady=15)

                # --- ‡∏™‡πà‡∏ß‡∏ô‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î (‡∏ä‡∏∑‡πà‡∏≠, ‡∏£‡∏≤‡∏Ñ‡∏≤) (‡∏ñ‡∏±‡∏î‡∏à‡∏≤‡∏Å‡∏£‡∏π‡∏õ) ---
                details_frame = ctk.CTkFrame(item_card, fg_color="transparent")
                # fill="x" ‡πÉ‡∏´‡πâ‡∏¢‡∏∑‡∏î‡∏ï‡∏≤‡∏°‡πÅ‡∏ô‡∏ß‡∏ô‡∏≠‡∏ô, expand=True ‡πÉ‡∏´‡πâ‡∏Å‡∏¥‡∏ô‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠
                details_frame.pack(side="left", fill="x", expand=True, padx=10) 
                
                # ‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
                name_label = ctk.CTkLabel(
                    details_frame, 
                    text=item_data.product.name, # ‡∏î‡∏∂‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏à‡∏≤‡∏Å product object ‡πÉ‡∏ô item_data
                    font=ctk.CTkFont(size=16, weight="bold"),
                    text_color="#6D4C41",
                    anchor="w" # ‡∏ä‡∏¥‡∏î‡∏ã‡πâ‡∏≤‡∏¢
                )
                name_label.pack(fill="x") # ‡∏¢‡∏∑‡∏î‡πÄ‡∏ï‡πá‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏ß‡πâ‡∏≤‡∏á‡∏Ç‡∏≠‡∏á details_frame
                
                # ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ï‡πà‡∏≠‡∏ä‡∏¥‡πâ‡∏ô
                price_label = ctk.CTkLabel(
                    details_frame, 
                    text=item_data.product.format_price(), # ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ format_price() ‡∏à‡∏≤‡∏Å product object
                    font=ctk.CTkFont(size=14), 
                    text_color="#FFB6C1", 
                    anchor="w"
                )
                price_label.pack(fill="x", pady=(5, 0))

                # --- ‡∏™‡πà‡∏ß‡∏ô‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô (+/-) (‡∏ñ‡∏±‡∏î‡∏à‡∏≤‡∏Å‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î) ---
                quantity_frame = ctk.CTkFrame(item_card, fg_color="#FFF0F5", corner_radius=10)
                quantity_frame.pack(side="left", padx=15)
                
                # ‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏î (-)
                minus_button = ctk.CTkButton(
                    quantity_frame, 
                    text="-", 
                    width=35, height=35, corner_radius=10,
                    fg_color="#FFB6C1", hover_color="#FFC0CB",
                    font=ctk.CTkFont(size=18, weight="bold"),
                    # ‡πÉ‡∏ä‡πâ lambda capture ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡πà‡∏á item_data ‡πÅ‡∏•‡∏∞ -1 ‡πÑ‡∏õ‡πÉ‡∏´‡πâ change_quantity
                    command=lambda current_item=item_data: self.change_quantity(current_item, -1) 
                )
                minus_button.pack(side="left", padx=5, pady=5)
                
                # Label ‡πÅ‡∏™‡∏î‡∏á‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
                quantity_label = ctk.CTkLabel(
                    quantity_frame, 
                    text=f"{item_data.quantity}", # ‡πÅ‡∏™‡∏î‡∏á‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏à‡∏≤‡∏Å item_data
                    width=40, 
                    font=ctk.CTkFont(size=16, weight="bold"),
                    text_color="#6D4C41"
                )
                quantity_label.pack(side="left", padx=5)
                
                # ‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏° (+)
                plus_button = ctk.CTkButton(
                    quantity_frame, 
                    text="+", 
                    width=35, height=35, corner_radius=10,
                    fg_color="#FFB6C1", hover_color="#FFC0CB",
                    font=ctk.CTkFont(size=18, weight="bold"),
                     # ‡πÉ‡∏ä‡πâ lambda capture ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡πà‡∏á item_data ‡πÅ‡∏•‡∏∞ +1 ‡πÑ‡∏õ‡πÉ‡∏´‡πâ change_quantity
                    command=lambda current_item=item_data: self.change_quantity(current_item, 1)
                )
                plus_button.pack(side="left", padx=5, pady=5)

                # --- ‡∏™‡πà‡∏ß‡∏ô‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏° ‡πÅ‡∏•‡∏∞ ‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏ö (‡∏Ç‡∏ß‡∏≤‡∏™‡∏∏‡∏î) ---
                total_remove_frame = ctk.CTkFrame(item_card, fg_color="transparent", width=150)
                # fill="y" ‡πÉ‡∏´‡πâ‡∏¢‡∏∑‡∏î‡∏ï‡∏≤‡∏°‡πÅ‡∏ô‡∏ß‡∏ï‡∏±‡πâ‡∏á
                total_remove_frame.pack(side="right", fill="y", padx=20, pady=15) 

                # Label ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏°‡∏Ç‡∏≠‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ô‡∏µ‡πâ
                item_total_label = ctk.CTkLabel(
                    total_remove_frame, 
                    text=item_data.format_total_price(), # ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å format_total_price() ‡∏Ç‡∏≠‡∏á CartItem
                    font=ctk.CTkFont(size=18, weight="bold"),
                    text_color="#FF6B9D"
                )
                # expand=True ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ label ‡∏ô‡∏µ‡πâ‡∏≠‡∏¢‡∏π‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏•‡∏≤‡∏á‡πÅ‡∏ô‡∏ß‡∏ï‡∏±‡πâ‡∏á (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠)
                item_total_label.pack(expand=True) 
                
                # ‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏ö (‡∏ñ‡∏±‡∏á‡∏Ç‡∏¢‡∏∞)
                remove_button = ctk.CTkButton(
                    total_remove_frame, 
                    text="üóëÔ∏è", 
                    width=40, height=40, corner_radius=10,
                    fg_color="#FFEBEE", hover_color="#FFB6C1",
                    text_color="#F44336", # ‡∏™‡∏µ‡πÅ‡∏î‡∏á
                    font=ctk.CTkFont(size=18),
                    # ‡πÉ‡∏ä‡πâ lambda capture ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡πà‡∏á product_id ‡πÑ‡∏õ‡πÉ‡∏´‡πâ remove_item
                    command=lambda prod_id=item_data.product.product_id: self.remove_item(prod_id) 
                )
                remove_button.pack(expand=True, pady=(5, 0))
                # --- ‡∏à‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á Widget ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ 1 ‡∏ä‡∏¥‡πâ‡∏ô ---

                # ‡∏ß‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πå‡∏î‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏™‡∏£‡πá‡∏à ‡∏•‡∏á‡πÉ‡∏ô frame ‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏î‡πâ
                item_card.pack(fill="x", padx=10, pady=8) 
            # --- ‡∏à‡∏ö Loop ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πå‡∏î‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ ---
        # --- ‡∏à‡∏ö Panel ‡∏î‡πâ‡∏≤‡∏ô‡∏ã‡πâ‡∏≤‡∏¢ ---

        # --- 4. ‡∏™‡∏£‡πâ‡∏≤‡∏á Panel ‡∏î‡πâ‡∏≤‡∏ô‡∏Ç‡∏ß‡∏≤ (‡∏™‡∏£‡∏∏‡∏õ‡∏¢‡∏≠‡∏î) ---
        right_panel = ctk.CTkFrame(self, fg_color="transparent")
        # ‡∏ß‡∏≤‡∏á right_panel ‡πÉ‡∏ô‡πÅ‡∏ñ‡∏ß 1, ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå 1 ‡∏¢‡∏∑‡∏î‡πÄ‡∏ï‡πá‡∏°‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà
        right_panel.grid(row=1, column=1, sticky="nsew", padx=(10, 30), pady=10) 

        # --- 4.1 ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πå‡∏î‡∏™‡∏£‡∏∏‡∏õ‡∏¢‡∏≠‡∏î ---
        summary_card = ctk.CTkFrame(
            right_panel, # ‡πÉ‡∏™‡πà‡πÉ‡∏ô right_panel
            fg_color="#FFFFFF", 
            corner_radius=20,
            border_width=2,
            border_color="#FFEBEE"
        )
        # ‡πÉ‡∏´‡πâ‡∏Å‡∏≤‡∏£‡πå‡∏î‡∏Ç‡∏¢‡∏≤‡∏¢‡πÄ‡∏ï‡πá‡∏° right_panel
        summary_card.pack(fill="both", expand=True) 

        # --- 4.2 ‡∏™‡∏£‡πâ‡∏≤‡∏á Header ‡∏Ç‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πå‡∏î‡∏™‡∏£‡∏∏‡∏õ ---
        summary_header = ctk.CTkFrame(summary_card, fg_color="#FFE4E1", corner_radius=15)
        summary_header.pack(fill="x", padx=20, pady=20)
        
        summary_title = ctk.CTkLabel(
            summary_header, 
            text="üí∞ ‡∏™‡∏£‡∏∏‡∏õ‡∏¢‡∏≠‡∏î", 
            font=ctk.CTkFont(size=22, weight="bold"),
            text_color="#6D4C41"
        )
        summary_title.pack(pady=15)

        # --- 4.3 ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏° (Subtotal) ---
        subtotal_frame = ctk.CTkFrame(summary_card, fg_color="transparent")
        subtotal_frame.pack(fill="x", padx=25, pady=10)
        
        subtotal_text_label = ctk.CTkLabel(
            subtotal_frame, 
            text="‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏° (Subtotal)",
            font=ctk.CTkFont(size=14),
            text_color="#6D4C41"
        )
        subtotal_text_label.pack(side="left")
        
        # Label ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏° (‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏ß‡πâ‡πÉ‡∏ô self ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï ‡∏ñ‡πâ‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£)
        # ‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏Ñ‡∏≤‡∏à‡∏≤‡∏Å self.cart.format_total_price()
        self.subtotal_value_label = ctk.CTkLabel( 
            subtotal_frame, 
            text=self.cart.format_total_price(), 
            font=ctk.CTkFont(size=16, weight="bold"),
            text_color="#6D4C41"
        )
        self.subtotal_value_label.pack(side="right")

        # --- 4.4 ‡πÄ‡∏™‡πâ‡∏ô‡∏Ñ‡∏±‡πà‡∏ô ---
        separator = ctk.CTkFrame(summary_card, height=2, fg_color="#FFEBEE")
        separator.pack(fill="x", padx=25, pady=15)

        # --- 4.5 ‡πÅ‡∏™‡∏î‡∏á‡∏¢‡∏≠‡∏î‡∏™‡∏∏‡∏ó‡∏ò‡∏¥ (Total) ---
        total_frame = ctk.CTkFrame(summary_card, fg_color="transparent")
        total_frame.pack(fill="x", padx=25, pady=10)
        
        total_text_label = ctk.CTkLabel(
            total_frame, 
            text="‡∏¢‡∏≠‡∏î‡∏™‡∏∏‡∏ó‡∏ò‡∏¥ (Total)", 
            font=ctk.CTkFont(size=18, weight="bold"),
            text_color="#6D4C41"
        )
        total_text_label.pack(side="left")
        
        # Label ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏¢‡∏≠‡∏î‡∏™‡∏∏‡∏ó‡∏ò‡∏¥ (‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏ß‡πâ‡πÉ‡∏ô self ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï ‡∏ñ‡πâ‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£)
        self.total_value_label = ctk.CTkLabel( 
            total_frame, 
            text=self.cart.format_total_price(), # ‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡∏Å‡∏±‡∏ö‡∏¢‡∏≠‡∏î‡∏™‡∏∏‡∏ó‡∏ò‡∏¥‡πÄ‡∏ó‡πà‡∏≤‡∏Å‡∏±‡∏ô‡πÉ‡∏ô‡∏Å‡∏£‡∏ì‡∏µ‡∏ô‡∏µ‡πâ
            font=ctk.CTkFont(size=22, weight="bold"), 
            text_color="#FF6B9D"
        )
        self.total_value_label.pack(side="right")

        # --- 4.6 Spacer (‡∏ï‡∏±‡∏ß‡πÄ‡∏ß‡πâ‡∏ô‡∏ß‡∏£‡∏£‡∏Ñ‡πÅ‡∏ô‡∏ß‡∏ï‡∏±‡πâ‡∏á) ---
        # ‡πÉ‡∏ä‡πâ Label ‡∏ß‡πà‡∏≤‡∏á‡πÜ ‡πÅ‡∏•‡πâ‡∏ß pack(expand=True) ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏±‡∏ô‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏á‡πÑ‡∏õ‡∏Ç‡πâ‡∏≤‡∏á‡∏•‡πà‡∏≤‡∏á
        spacer = ctk.CTkLabel(summary_card, text="")
        spacer.pack(expand=True) 

        # --- 4.7 ‡∏õ‡∏∏‡πà‡∏°‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£ ---
        # ‡∏õ‡∏∏‡πà‡∏° "‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô"
        checkout_button = ctk.CTkButton(
            summary_card, 
            text="üí≥ ‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô", 
            height=50, 
            corner_radius=15, 
            font=ctk.CTkFont(size=16, weight="bold"),
            fg_color="#FFB6C1",
            hover_color="#FFC0CB",
            text_color="white",
            command=lambda: self.main_app.navigate_to('CheckoutWindow') # ‡∏Å‡∏î‡πÅ‡∏•‡πâ‡∏ß‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ Checkout
        )
        checkout_button.pack(fill="x", padx=20, pady=(10, 10))

        # ‡∏õ‡∏∏‡πà‡∏° "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ã‡∏∑‡πâ‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ï‡πà‡∏≠"
        continue_button = ctk.CTkButton(
            summary_card, 
            text="< ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ã‡∏∑‡πâ‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ï‡πà‡∏≠", 
            fg_color="transparent", 
            text_color="#FFB6C1",
            hover_color="#FFE4E1",
            font=ctk.CTkFont(size=14),
            command=lambda: self.main_app.navigate_to('HomeWindow') # ‡∏Å‡∏î‡πÅ‡∏•‡πâ‡∏ß‡∏Å‡∏•‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤ Home
        )
        continue_button.pack(pady=(0, 20))
        
        # --- 4.8 ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏õ‡∏∏‡πà‡∏°‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô ‡∏ñ‡πâ‡∏≤‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏ß‡πà‡∏≤‡∏á ---
        if not cart_items_list: # ‡πÉ‡∏ä‡πâ cart_items_list ‡∏ó‡∏µ‡πà‡∏î‡∏∂‡∏á‡∏°‡∏≤‡∏ï‡∏≠‡∏ô‡πÅ‡∏£‡∏Å
            checkout_button.configure(state="disabled") # ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏µ‡πÄ‡∏ó‡∏≤ ‡∏Å‡∏î‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ
        # --- ‡∏à‡∏ö Panel ‡∏î‡πâ‡∏≤‡∏ô‡∏Ç‡∏ß‡∏≤ ---

    
    # --- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ Logic (‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°) ---
    def change_quantity(self, item, amount: int):
        """‡πÄ‡∏û‡∏¥‡πà‡∏°/‡∏•‡∏î ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ ‡πÅ‡∏•‡πâ‡∏ß refresh ‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠"""
        new_quantity = item.quantity + amount
        product_id = item.product.product_id
        
        if new_quantity > 0:
            # ‡∏™‡∏±‡πà‡∏á‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÉ‡∏ô Cart object
            self.cart.update_quantity(product_id, new_quantity) 
        else:
            # ‡∏ñ‡πâ‡∏≤‡∏à‡∏≥‡∏ô‡∏ß‡∏ô <= 0 ‡πÉ‡∏´‡πâ‡∏•‡∏ö‡∏≠‡∏≠‡∏Å (‡πÅ‡∏ï‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ñ‡∏≤‡∏°‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡πà‡∏≠‡∏ô)
            self.remove_item(product_id) 
            # ‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å on_show() ‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡∏ó‡∏≥‡πÉ‡∏ô remove_item ‡∏ñ‡πâ‡∏≤‡∏•‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
            return # ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡πÄ‡∏•‡∏¢ ‡πÄ‡∏û‡∏£‡∏≤‡∏∞ remove_item ‡∏à‡∏∞ refresh ‡πÉ‡∏´‡πâ‡πÄ‡∏≠‡∏á

        # ‡∏ñ‡πâ‡∏≤‡πÅ‡∏Ñ‡πà update ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô (‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏•‡∏ö) ‡πÉ‡∏´‡πâ refresh ‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠
        self.on_show() 

    def remove_item(self, product_id: int):
        """‡∏•‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤ (‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô) ‡πÅ‡∏•‡πâ‡∏ß refresh ‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠"""
        # ‡πÅ‡∏™‡∏î‡∏á popup ‡∏ñ‡∏≤‡∏°‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô
        user_confirmed = messagebox.askyesno("‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô", "‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ô‡∏µ‡πâ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?", parent=self)
        
        if user_confirmed: # ‡∏ñ‡πâ‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏Å‡∏î Yes
            # ‡∏™‡∏±‡πà‡∏á‡∏•‡∏ö item ‡πÉ‡∏ô Cart object
            self.cart.remove_item(product_id) 
            # Refresh ‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ UI ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï
            self.on_show()