import customtkinter as ctk
from tkinter import ttk

class AdminDashboardWindow(ctk.CTkFrame):
    def __init__(self, parent, main_app):
        super().__init__(parent, fg_color="#F8F9FA")
        self.main_app = main_app
        self.db = main_app.db
        
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠ UI ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
        self.setup_ui() 
    
    def on_show(self):
        """
        ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏ô‡∏µ‡πâ: ‡∏•‡∏ö‡∏Ç‡∏≠‡∏á‡πÄ‡∏Å‡πà‡∏≤ ‡∏™‡∏£‡πâ‡∏≤‡∏á UI ‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
        ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏™‡∏î‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏™‡∏°‡∏≠
        """
        # ‡∏•‡∏ö widget ‡πÄ‡∏Å‡πà‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
        for widget in self.winfo_children():
            widget.destroy()
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á UI ‡πÉ‡∏´‡∏°‡πà
        self.setup_ui() 
    
    def setup_ui(self):
        # --- 1. ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡∏¢‡∏≤‡∏¢‡∏ï‡∏±‡∏ß‡∏Ç‡∏≠‡∏á Grid ‡∏´‡∏•‡∏±‡∏Å ---
        # ‡πÉ‡∏´‡πâ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå 0 (‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡πÄ‡∏î‡∏µ‡∏¢‡∏ß) ‡∏Ç‡∏¢‡∏≤‡∏¢‡πÄ‡∏ï‡πá‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏ß‡πâ‡∏≤‡∏á
        self.grid_columnconfigure(0, weight=1) 
        # ‡πÉ‡∏´‡πâ‡πÅ‡∏ñ‡∏ß‡∏ó‡∏µ‡πà 1 (main_frame) ‡∏Ç‡∏¢‡∏≤‡∏¢‡πÄ‡∏ï‡πá‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á
        self.grid_rowconfigure(1, weight=1)    

        # --- 2. ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡πà‡∏ß‡∏ô‡∏´‡∏±‡∏ß (Header) ---
        # (‡∏¢‡πâ‡∏≤‡∏¢‡πÇ‡∏Ñ‡πâ‡∏î‡∏à‡∏≤‡∏Å create_header ‡∏°‡∏≤‡πÑ‡∏ß‡πâ‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ)
        header = ctk.CTkFrame(self, fg_color="white", corner_radius=0, height=70)
        # ‡∏ß‡∏≤‡∏á header ‡πÅ‡∏ñ‡∏ß‡∏ö‡∏ô‡∏™‡∏∏‡∏î (row=0) ‡∏¢‡∏∑‡∏î‡πÄ‡∏ï‡πá‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏ß‡πâ‡∏≤‡∏á (sticky="ew")
        header.grid(row=0, column=0, sticky="ew") 
        # ‡πÉ‡∏´‡πâ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå 1 ‡πÉ‡∏ô header ‡∏Ç‡∏¢‡∏≤‡∏¢ (‡∏î‡∏±‡∏ô‡∏õ‡∏∏‡πà‡∏°‡πÑ‡∏õ‡∏Ç‡∏ß‡∏≤)
        header.grid_columnconfigure(1, weight=1) 
        
        # Label ‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏ô‡πâ‡∏≤
        header_title = ctk.CTkLabel(
            header, 
            text="üìä Admin Dashboard", 
            font=ctk.CTkFont(size=28, weight="bold"),
            text_color="#2E7D32" # ‡∏™‡∏µ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß
        )
        header_title.pack(side="left", padx=30)
        
        # Frame ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ß‡∏≤‡∏á‡∏õ‡∏∏‡πà‡∏°‡∏ó‡∏≤‡∏á‡∏Ç‡∏ß‡∏≤
        header_btn_frame = ctk.CTkFrame(header, fg_color="transparent")
        header_btn_frame.pack(side="right", padx=20)
        
        # ‡∏õ‡∏∏‡πà‡∏° "‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å"
        home_btn = ctk.CTkButton(
            header_btn_frame,
            text="üè† ‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å",
            command=lambda: self.main_app.navigate_to('HomeWindow'), # ‡∏Å‡∏î‡πÅ‡∏•‡πâ‡∏ß‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ Home
            fg_color="transparent",
            text_color="gray50",
            hover_color="#F5F5F5"
        )
        home_btn.pack(side="left", padx=5)
        
        # ‡∏õ‡∏∏‡πà‡∏° "‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"
        product_btn = ctk.CTkButton(
            header_btn_frame,
            text="‚öôÔ∏è ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤",
            command=lambda: self.main_app.navigate_to('AdminWindow'), # ‡∏Å‡∏î‡πÅ‡∏•‡πâ‡∏ß‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ AdminWindow
            fg_color="#FF6B9D", # ‡∏™‡∏µ‡∏ä‡∏°‡∏û‡∏π
            hover_color="#FF8FB3"
        )
        product_btn.pack(side="left", padx=5)
        
        # ‡∏õ‡∏∏‡πà‡∏° "‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠"
        orders_btn = ctk.CTkButton(
            header_btn_frame,
            text="üì¶ ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠",
            command=lambda: self.main_app.navigate_to('AdminOrdersWindow'), # ‡∏Å‡∏î‡πÅ‡∏•‡πâ‡∏ß‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ AdminOrdersWindow
            fg_color="#2196F3", # ‡∏™‡∏µ‡∏ü‡πâ‡∏≤
            hover_color="#42A5F5"
        )
        orders_btn.pack(side="left", padx=5)
        
        # ‡∏õ‡∏∏‡πà‡∏° "‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢"
        sales_btn = ctk.CTkButton(
            header_btn_frame,
            text="üìä ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢",
            command=lambda: self.main_app.navigate_to('SalesHistoryWindow'), # ‡∏Å‡∏î‡πÅ‡∏•‡πâ‡∏ß‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ SalesHistoryWindow
            fg_color="#9C27B0", # ‡∏™‡∏µ‡∏°‡πà‡∏ß‡∏á
            hover_color="#BA68C8"
        )
        sales_btn.pack(side="left", padx=5)
        # --- ‡∏à‡∏ö‡∏™‡πà‡∏ß‡∏ô Header ---

        # --- 3. ‡∏™‡∏£‡πâ‡∏≤‡∏á Frame ‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤ (‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏î‡πâ) ---
        main_frame = ctk.CTkScrollableFrame(self, fg_color="transparent")
        # ‡∏ß‡∏≤‡∏á main_frame ‡πÉ‡∏ô‡πÅ‡∏ñ‡∏ß 1 (‡πÉ‡∏ï‡πâ header) ‡∏¢‡∏∑‡∏î‡πÄ‡∏ï‡πá‡∏°‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà (sticky="nsew")
        main_frame.grid(row=1, column=0, sticky="nsew", padx=30, pady=20) 
        # ‡πÅ‡∏ö‡πà‡∏á main_frame ‡πÄ‡∏õ‡πá‡∏ô 4 ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡πÄ‡∏ó‡πà‡∏≤‡πÜ ‡∏Å‡∏±‡∏ô ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ß‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πå‡∏î‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥
        main_frame.grid_columnconfigure((0, 1, 2, 3), weight=1) 

        # --- 4. ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πå‡∏î‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥ ---
        # (‡∏¢‡πâ‡∏≤‡∏¢‡πÇ‡∏Ñ‡πâ‡∏î‡∏à‡∏≤‡∏Å create_stats_cards ‡∏°‡∏≤‡πÑ‡∏ß‡πâ‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ)
        
        # 4.1 ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏à‡∏≤‡∏Å DB
        stats = self.db.get_dashboard_stats()
        
        # 4.2 ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πå‡∏î‡πÅ‡∏ï‡πà‡∏•‡∏∞‡πÉ‡∏ö
        cards_data = [
            {
                'title': '‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏£‡∏ß‡∏°',
                'value': f"{stats['total_orders']}",
                'subtitle': '‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠',
                'icon': 'üõí',
                'color': '#4CAF50' # ‡∏™‡∏µ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß
            },
            {
                'title': '‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î',
                'value': f"‡∏ø{stats['total_revenue']:,.2f}",
                'subtitle': '‡∏ö‡∏≤‡∏ó',
                'icon': 'üí∞',
                'color': '#2196F3' # ‡∏™‡∏µ‡∏ü‡πâ‡∏≤
            },
            {
                'title': '‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î',
                'value': f"{stats['total_products']}",
                'subtitle': '‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£',
                'icon': 'üì¶',
                'color': '#FF9800' # ‡∏™‡∏µ‡∏™‡πâ‡∏°
            },
            {
                'title': '‡∏£‡∏≠‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£',
                'value': f"{stats['pending_orders']}",
                'subtitle': '‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠',
                'icon': '‚è≥',
                'color': '#F44336' # ‡∏™‡∏µ‡πÅ‡∏î‡∏á
            }
        ]
        
        # 4.3 ‡∏ß‡∏ô‡∏•‡∏π‡∏õ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πå‡∏î‡πÅ‡∏ï‡πà‡∏•‡∏∞‡πÉ‡∏ö
        for i, card_data_item in enumerate(cards_data):
            # --- ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πå‡∏î 1 ‡πÉ‡∏ö (‡πÇ‡∏Ñ‡πâ‡∏î‡∏à‡∏≤‡∏Å create_stat_card ‡πÄ‡∏î‡∏¥‡∏°) ---
            # (‡∏¢‡πâ‡∏≤‡∏¢‡πÇ‡∏Ñ‡πâ‡∏î‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πå‡∏î‡∏°‡∏≤‡πÑ‡∏ß‡πâ‡πÉ‡∏ô loop ‡∏ô‡∏µ‡πâ)
            card = ctk.CTkFrame(main_frame, # ‡πÉ‡∏™‡πà‡∏Å‡∏≤‡∏£‡πå‡∏î‡∏•‡∏á‡πÉ‡∏ô main_frame
                                fg_color="white", 
                                corner_radius=15, 
                                border_width=1, 
                                border_color="#E0E0E0")
            card.grid_columnconfigure(0, weight=1) # ‡πÉ‡∏´‡πâ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏≠‡∏¢‡∏π‡πà‡∏Å‡∏•‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πå‡∏î
            
            # Icon (Emoji)
            icon_label = ctk.CTkLabel(
                card, 
                text=card_data_item['icon'], 
                font=ctk.CTkFont(size=40)
            )
            icon_label.grid(row=0, column=0, pady=(20, 10))
            
            # Title (‡πÄ‡∏ä‡πà‡∏ô '‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏£‡∏ß‡∏°')
            title_label = ctk.CTkLabel(
                card, 
                text=card_data_item['title'], 
                font=ctk.CTkFont(size=14),
                text_color="gray50"
            )
            title_label.grid(row=1, column=0, pady=5)
            
            # Value (‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥)
            value_label = ctk.CTkLabel(
                card, 
                text=card_data_item['value'], 
                font=ctk.CTkFont(size=28, weight="bold"),
                text_color=card_data_item['color'] # ‡πÉ‡∏ä‡πâ‡∏™‡∏µ‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î
            )
            value_label.grid(row=2, column=0, pady=5)
            
            # Subtitle (‡πÄ‡∏ä‡πà‡∏ô '‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠')
            subtitle_label = ctk.CTkLabel(
                card, 
                text=card_data_item['subtitle'], 
                font=ctk.CTkFont(size=12),
                text_color="gray40"
            )
            subtitle_label.grid(row=3, column=0, pady=(5, 20))
            # --- ‡∏à‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πå‡∏î 1 ‡πÉ‡∏ö ---
            
            # ‡∏ß‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πå‡∏î‡∏•‡∏á‡πÉ‡∏ô main_frame ‡∏ï‡∏≤‡∏°‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå i (0, 1, 2, 3)
            card.grid(row=0, column=i, padx=10, pady=10, sticky="nsew") 
        # --- ‡∏à‡∏ö‡∏™‡πà‡∏ß‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πå‡∏î‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥ ---

        # --- 5. ‡∏™‡∏£‡πâ‡∏≤‡∏á Frame ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ß‡∏≤‡∏á‡∏™‡πà‡∏ß‡∏ô Top Selling ‡πÅ‡∏•‡∏∞ Low Stock ‡∏Ç‡πâ‡∏≤‡∏á‡∏Å‡∏±‡∏ô ---
        chart_frame = ctk.CTkFrame(main_frame, fg_color="transparent")
        # ‡∏ß‡∏≤‡∏á chart_frame ‡πÉ‡∏ô‡πÅ‡∏ñ‡∏ß 1 (‡πÉ‡∏ï‡πâ‡∏Å‡∏≤‡∏£‡πå‡∏î) ‡πÉ‡∏´‡πâ‡∏Å‡∏¥‡∏ô‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏±‡πâ‡∏á 4 ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå
        chart_frame.grid(row=1, column=0, columnspan=4, sticky="ew", pady=20) 
        # ‡πÅ‡∏ö‡πà‡∏á chart_frame ‡πÄ‡∏õ‡πá‡∏ô 2 ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡πÄ‡∏ó‡πà‡∏≤‡πÜ ‡∏Å‡∏±‡∏ô
        chart_frame.grid_columnconfigure((0, 1), weight=1) 

        # --- 6. ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡πà‡∏ß‡∏ô "‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏Ç‡∏≤‡∏¢‡∏î‡∏µ" ---
        # (‡∏¢‡πâ‡∏≤‡∏¢‡πÇ‡∏Ñ‡πâ‡∏î‡∏à‡∏≤‡∏Å create_top_products_section ‡∏°‡∏≤‡πÑ‡∏ß‡πâ‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ)
        top_product_section = ctk.CTkFrame(chart_frame, # ‡πÉ‡∏™‡πà‡πÉ‡∏ô chart_frame ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå 0
                                           fg_color="white", corner_radius=15)
        top_product_section.grid(row=0, column=0, sticky="nsew", padx=10, pady=10)
        
        top_product_title = ctk.CTkLabel(
            top_product_section, 
            text="üèÜ ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏Ç‡∏≤‡∏¢‡∏î‡∏µ Top 5", 
            font=ctk.CTkFont(size=18, weight="bold")
        )
        top_product_title.pack(pady=(20, 10), padx=20, anchor="w") # anchor="w" ‡∏Ñ‡∏∑‡∏≠‡∏ä‡∏¥‡∏î‡∏ã‡πâ‡∏≤‡∏¢
        
        # ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏Ç‡∏≤‡∏¢‡∏î‡∏µ‡∏à‡∏≤‡∏Å DB
        top_products_list = self.db.get_top_selling_products(5)
        
        # ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
        if top_products_list:
            # ‡∏ß‡∏ô‡∏•‡∏π‡∏õ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏Ç‡∏≤‡∏¢‡∏î‡∏µ
            for i, product_item in enumerate(top_products_list, 1): # ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ô‡∏±‡∏ö i ‡∏à‡∏≤‡∏Å 1
                item_frame = ctk.CTkFrame(top_product_section, fg_color="#F5F5F5", corner_radius=10)
                item_frame.pack(fill="x", padx=20, pady=5)
                
                # ‡∏•‡∏≥‡∏î‡∏±‡∏ö (#1, #2, ...)
                rank_label = ctk.CTkLabel(
                    item_frame, 
                    text=f"#{i}", 
                    font=ctk.CTkFont(size=16, weight="bold"),
                    text_color="#FF6B9D",
                    width=40
                )
                rank_label.pack(side="left", padx=10, pady=10)
                
                # Frame ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏•‡∏∞‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î
                info_frame = ctk.CTkFrame(item_frame, fg_color="transparent")
                info_frame.pack(side="left", fill="x", expand=True, padx=10)
                
                # ‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
                name_label = ctk.CTkLabel(
                    info_frame, 
                    text=product_item['name'], 
                    font=ctk.CTkFont(size=14, weight="bold"),
                    anchor="w"
                )
                name_label.pack(anchor="w")
                
                # ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î (‡∏Ç‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡∏Å‡∏µ‡πà‡∏ä‡∏¥‡πâ‡∏ô / ‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ)
                details_label = ctk.CTkLabel(
                    info_frame, 
                    text=f"‡∏Ç‡∏≤‡∏¢‡πÑ‡∏î‡πâ: {product_item['total_sold']} ‡∏ä‡∏¥‡πâ‡∏ô | ‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ: ‡∏ø{product_item['total_revenue']:,.2f}", 
                    font=ctk.CTkFont(size=12),
                    text_color="gray50",
                    anchor="w"
                )
                details_label.pack(anchor="w")
        else:
            # ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
            no_data_label = ctk.CTkLabel(
                top_product_section, 
                text="‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢", 
                text_color="gray50"
            )
            no_data_label.pack(pady=20)
        
        # Spacer ‡πÄ‡∏ß‡πâ‡∏ô‡∏ß‡∏£‡∏£‡∏Ñ‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á
        spacer1 = ctk.CTkLabel(top_product_section, text="")
        spacer1.pack(pady=10)
        # --- ‡∏à‡∏ö‡∏™‡πà‡∏ß‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏Ç‡∏≤‡∏¢‡∏î‡∏µ ---
        
        # --- 7. ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡πà‡∏ß‡∏ô "‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏™‡∏ï‡πá‡∏≠‡∏Å‡∏ï‡πà‡∏≥" ---
        # (‡∏¢‡πâ‡∏≤‡∏¢‡πÇ‡∏Ñ‡πâ‡∏î‡∏à‡∏≤‡∏Å create_low_stock_section ‡∏°‡∏≤‡πÑ‡∏ß‡πâ‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ)
        low_stock_section = ctk.CTkFrame(chart_frame, # ‡πÉ‡∏™‡πà‡πÉ‡∏ô chart_frame ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå 1
                                         fg_color="white", corner_radius=15)
        low_stock_section.grid(row=0, column=1, sticky="nsew", padx=10, pady=10)
        
        low_stock_title = ctk.CTkLabel(
            low_stock_section, 
            text="‚ö†Ô∏è ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏™‡∏ï‡πá‡∏≠‡∏Å‡∏ï‡πà‡∏≥", 
            font=ctk.CTkFont(size=18, weight="bold"),
            text_color="#F44336" # ‡∏™‡∏µ‡πÅ‡∏î‡∏á
        )
        low_stock_title.pack(pady=(20, 10), padx=20, anchor="w")
        
        # ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏™‡∏ï‡πá‡∏≠‡∏Å‡∏ï‡πà‡∏≥ (‡∏ô‡πâ‡∏≠‡∏¢‡∏Å‡∏ß‡πà‡∏≤ 10 ‡∏ä‡∏¥‡πâ‡∏ô) ‡∏à‡∏≤‡∏Å DB
        low_stock_list = self.db.get_low_stock_products(10)
        
        # ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
        if low_stock_list:
            # ‡∏ß‡∏ô‡∏•‡∏π‡∏õ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏• (‡πÄ‡∏≠‡∏≤‡πÅ‡∏Ñ‡πà 5 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÅ‡∏£‡∏Å)
            for product_item in low_stock_list[:5]: 
                item_frame = ctk.CTkFrame(low_stock_section, fg_color="#FFEBEE", corner_radius=10) # ‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏™‡∏µ‡∏ä‡∏°‡∏û‡∏π‡∏≠‡πà‡∏≠‡∏ô
                item_frame.pack(fill="x", padx=20, pady=5)
                
                # Frame ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏•‡∏∞‡∏à‡∏≥‡∏ô‡∏ß‡∏ô
                info_frame = ctk.CTkFrame(item_frame, fg_color="transparent")
                info_frame.pack(side="left", fill="x", expand=True, padx=15, pady=10)
                
                # ‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
                name_label = ctk.CTkLabel(
                    info_frame, 
                    text=product_item['name'], 
                    font=ctk.CTkFont(size=14, weight="bold"),
                    anchor="w"
                )
                name_label.pack(anchor="w")
                
                # ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏™‡∏µ‡∏ï‡∏≤‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏™‡∏ï‡πá‡∏≠‡∏Å
                stock_amount = product_item['stock']
                if stock_amount < 5:
                    stock_color = "#F44336" # ‡∏™‡∏µ‡πÅ‡∏î‡∏á (‡∏ô‡πâ‡∏≠‡∏¢‡∏Å‡∏ß‡πà‡∏≤ 5)
                else:
                    stock_color = "#FF9800" # ‡∏™‡∏µ‡∏™‡πâ‡∏° (5-9)
                    
                # ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠
                stock_label = ctk.CTkLabel(
                    info_frame, 
                    text=f"‡πÄ‡∏´‡∏•‡∏∑‡∏≠: {stock_amount} ‡∏ä‡∏¥‡πâ‡∏ô", 
                    font=ctk.CTkFont(size=12),
                    text_color=stock_color, # ‡πÉ‡∏ä‡πâ‡∏™‡∏µ‡∏ó‡∏µ‡πà‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÑ‡∏ß‡πâ
                    anchor="w"
                )
                stock_label.pack(anchor="w")
        else:
            # ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏™‡∏ï‡πá‡∏≠‡∏Å‡∏ï‡πà‡∏≥
            all_ok_label = ctk.CTkLabel(
                low_stock_section, 
                text="‡∏™‡∏ï‡πá‡∏≠‡∏Å‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏û‡∏≠‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ‚úì", 
                text_color="#4CAF50" # ‡∏™‡∏µ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß
            )
            all_ok_label.pack(pady=20)
        
        # Spacer ‡πÄ‡∏ß‡πâ‡∏ô‡∏ß‡∏£‡∏£‡∏Ñ‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á
        spacer2 = ctk.CTkLabel(low_stock_section, text="")
        spacer2.pack(pady=10)
        # --- ‡∏à‡∏ö‡∏™‡πà‡∏ß‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏™‡∏ï‡πá‡∏≠‡∏Å‡∏ï‡πà‡∏≥ ---

        # --- 8. ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡πà‡∏ß‡∏ô "‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î" ---
        # (‡∏¢‡πâ‡∏≤‡∏¢‡πÇ‡∏Ñ‡πâ‡∏î‡∏à‡∏≤‡∏Å create_recent_orders_section ‡∏°‡∏≤‡πÑ‡∏ß‡πâ‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ)
        recent_orders_section = ctk.CTkFrame(main_frame, # ‡πÉ‡∏™‡πà‡πÉ‡∏ô main_frame (‡πÅ‡∏ñ‡∏ß 2 ‡πÉ‡∏ï‡πâ chart_frame)
                                             fg_color="white", corner_radius=15)
        # columnspan=4 ‡πÉ‡∏´‡πâ‡∏Å‡∏¥‡∏ô‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏±‡πâ‡∏á 4 ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå
        recent_orders_section.grid(row=2, column=0, columnspan=4, sticky="nsew", pady=20) 
        
        recent_orders_title = ctk.CTkLabel(
            recent_orders_section, 
            text="üìã ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î", 
            font=ctk.CTkFont(size=18, weight="bold")
        )
        recent_orders_title.pack(pady=(20, 10), padx=20, anchor="w")
        
        # --- ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á Treeview ---
        style = ttk.Style()
        style.configure("Dashboard.Treeview", rowheight=35, font=('Arial', 11))
        style.configure("Dashboard.Treeview.Heading", font=('Arial', 12, 'bold'))
        
        columns = ("order_id", "customer", "amount", "status", "date")
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á Treeview ‡πÉ‡∏™‡πà‡πÉ‡∏ô recent_orders_section
        orders_tree = ttk.Treeview(recent_orders_section, 
                                   columns=columns, 
                                   show="headings", # ‡πÑ‡∏°‡πà‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå #0
                                   height=8, # ‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á 8 ‡πÅ‡∏ñ‡∏ß
                                   style="Dashboard.Treeview")
        
        # ‡∏ï‡∏±‡πâ‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏±‡∏ß‡∏ï‡∏≤‡∏£‡∏≤‡∏á
        orders_tree.heading("order_id", text="Order ID")
        orders_tree.heading("customer", text="‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤")
        orders_tree.heading("amount", text="‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô")
        orders_tree.heading("status", text="‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞")
        orders_tree.heading("date", text="‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà")
        
        # ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏ß‡πâ‡∏≤‡∏á‡πÅ‡∏•‡∏∞ alignment
        orders_tree.column("order_id", width=80, anchor="center")
        orders_tree.column("customer", width=200, anchor="w")
        orders_tree.column("amount", width=120, anchor="e")
        orders_tree.column("status", width=120, anchor="center")
        orders_tree.column("date", width=150, anchor="center")
        
        # ‡∏ß‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á (‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ pack ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô section ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ pack)
        orders_tree.pack(fill="both", expand=True, padx=20, pady=(0, 20)) 
        
        # ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• 10 ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡∏à‡∏≤‡∏Å DB
        recent_orders_list = self.db.get_recent_orders(10)
        
        # ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢
        status_text_map = {
            'pending': '‚è≥ ‡∏£‡∏≠‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£',
            'confirmed': '‚úÖ ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÅ‡∏•‡πâ‡∏ß',
            'shipped': 'üöö ‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡πÅ‡∏•‡πâ‡∏ß',
            'delivered': '‚úîÔ∏è ‡∏™‡πà‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à',
            'cancelled': '‚ùå ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å'
        }
        
        # ‡∏ß‡∏ô‡∏•‡∏π‡∏õ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á
        for order_item in recent_orders_list:
            # ‡πÅ‡∏õ‡∏•‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢ (‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ ‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡πÄ‡∏î‡∏¥‡∏°)
            status_display = status_text_map.get(order_item['status'], order_item['status'])
            
            # ‡∏ï‡∏±‡∏î‡πÄ‡∏ß‡∏•‡∏≤‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ‡∏≠‡∏≠‡∏Å
            order_date = order_item['created_at']
            if order_date:
                order_date = order_date[:16] # ‡πÄ‡∏≠‡∏≤‡πÅ‡∏Ñ‡πà YYYY-MM-DD HH:MM
            else:
                order_date = '-'
                
            orders_tree.insert("", "end", values=(
                f"#{order_item['order_id']}",
                order_item['full_name'], # ‡πÉ‡∏ä‡πâ full_name ‡∏à‡∏≤‡∏Å DB
                f"‡∏ø{order_item['total_amount']:,.2f}", # ‡∏à‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô
                status_display, # ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢
                order_date # ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏µ‡πà‡∏ï‡∏±‡∏î‡πÅ‡∏•‡πâ‡∏ß
            ))
        # --- ‡∏à‡∏ö‡∏™‡πà‡∏ß‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î ---