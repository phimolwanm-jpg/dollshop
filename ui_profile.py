import customtkinter as ctk
from tkinter import messagebox
import bcrypt # Keep bcrypt for essential password checking

class ProfileWindow(ctk.CTkFrame):
    def __init__(self, parent, main_app):
        super().__init__(parent, fg_color="#FFF0F5")  # ‡∏™‡∏µ‡∏ä‡∏°‡∏û‡∏π‡∏≠‡πà‡∏≠‡∏ô Lavender Blush
        self.main_app = main_app
        # ‡∏î‡∏∂‡∏á object ‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏à‡∏≤‡∏Å main_app
        self.session = main_app.session 
        self.db = main_app.db
        
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠ UI ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
        self.setup_ui() 

    def on_show(self):
        """
        ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏ô‡∏µ‡πâ: ‡∏•‡∏ö‡∏Ç‡∏≠‡∏á‡πÄ‡∏Å‡πà‡∏≤ ‡∏™‡∏£‡πâ‡∏≤‡∏á UI ‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
        ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏™‡∏î‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏™‡∏°‡∏≠
        """
        # ‡∏•‡∏ö widget ‡πÄ‡∏Å‡πà‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
        for widget in self.winfo_children():
            widget.destroy()
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á UI ‡πÉ‡∏´‡∏°‡πà
        self.setup_ui() 

    def setup_ui(self):
        """‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏≠‡∏á‡∏Ñ‡πå‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö UI ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏Ç‡∏≠‡∏á‡∏´‡∏ô‡πâ‡∏≤ Profile"""
        # --- 1. ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡∏¢‡∏≤‡∏¢‡∏ï‡∏±‡∏ß‡∏Ç‡∏≠‡∏á Grid ‡∏´‡∏•‡∏±‡∏Å ---
        # ‡πÉ‡∏´‡πâ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå 0 (‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡πÄ‡∏î‡∏µ‡∏¢‡∏ß) ‡∏Ç‡∏¢‡∏≤‡∏¢‡πÄ‡∏ï‡πá‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏ß‡πâ‡∏≤‡∏á
        self.grid_columnconfigure(0, weight=1) 
        # ‡πÉ‡∏´‡πâ‡πÅ‡∏ñ‡∏ß‡∏ó‡∏µ‡πà 1 (content_frame) ‡∏Ç‡∏¢‡∏≤‡∏¢‡πÄ‡∏ï‡πá‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á
        self.grid_rowconfigure(1, weight=1)    

        # --- 2. ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡πà‡∏ß‡∏ô‡∏´‡∏±‡∏ß (Header) ---
        header_frame = ctk.CTkFrame(self, # ‡πÉ‡∏™‡πà header ‡πÉ‡∏ô ProfileWindow (self)
                                    fg_color="#FFFFFF", 
                                    corner_radius=0, 
                                    height=70, 
                                    border_width=1, 
                                    border_color="#FFEBEE")
        # ‡∏ß‡∏≤‡∏á header ‡πÅ‡∏ñ‡∏ß‡∏ö‡∏ô‡∏™‡∏∏‡∏î (row=0) ‡∏¢‡∏∑‡∏î‡πÄ‡∏ï‡πá‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏ß‡πâ‡∏≤‡∏á (sticky="ew")
        header_frame.grid(row=0, column=0, sticky="ew", pady=(0, 20)) 
        # ‡πÉ‡∏´‡πâ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå 1 ‡πÉ‡∏ô header ‡∏Ç‡∏¢‡∏≤‡∏¢ (‡∏î‡∏±‡∏ô‡∏õ‡∏∏‡πà‡∏°‡πÑ‡∏õ‡∏Ç‡∏ß‡∏≤)
        header_frame.grid_columnconfigure(1, weight=1) 
        
        # Label ‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏ô‡πâ‡∏≤
        header_title = ctk.CTkLabel(
            header_frame, 
            text="üë§ ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏Ç‡∏≠‡∏á‡∏â‡∏±‡∏ô", 
            font=ctk.CTkFont(size=28, weight="bold"),
            text_color="#FFB6C1"
        )
        header_title.pack(side="left", padx=30, pady=20)
        
        # ‡∏õ‡∏∏‡πà‡∏° "< ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å"
        back_button = ctk.CTkButton(
            header_frame, 
            text="< ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å", 
            fg_color="transparent", 
            text_color="#FFB6C1",
            hover_color="#FFE4E1",
            font=ctk.CTkFont(size=14),
            command=lambda: self.main_app.navigate_to('HomeWindow') # ‡∏Å‡∏î‡πÅ‡∏•‡πâ‡∏ß‡∏Å‡∏•‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤ Home
        )
        back_button.pack(side="right", padx=30, pady=20)
        # --- ‡∏à‡∏ö‡∏™‡πà‡∏ß‡∏ô Header ---
        
        # --- 3. ‡∏™‡∏£‡πâ‡∏≤‡∏á Frame ‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤ (‡∏ß‡∏≤‡∏á Panel ‡∏ã‡πâ‡∏≤‡∏¢-‡∏Ç‡∏ß‡∏≤) ---
        content_frame = ctk.CTkFrame(self, fg_color="transparent")
        # ‡∏ß‡∏≤‡∏á content_frame ‡πÉ‡∏ô‡πÅ‡∏ñ‡∏ß 1 (‡πÉ‡∏ï‡πâ header) ‡∏¢‡∏∑‡∏î‡πÄ‡∏ï‡πá‡∏°‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà
        content_frame.grid(row=1, column=0, padx=30, pady=10, sticky="nsew") 
        # ‡πÅ‡∏ö‡πà‡∏á content_frame ‡πÄ‡∏õ‡πá‡∏ô 2 ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡πÄ‡∏ó‡πà‡∏≤‡πÜ ‡∏Å‡∏±‡∏ô (uniform="group1")
        content_frame.grid_columnconfigure((0, 1), weight=1, uniform="group1") 
        # ‡πÉ‡∏´‡πâ‡πÅ‡∏ñ‡∏ß 0 (‡πÅ‡∏ñ‡∏ß‡πÄ‡∏î‡∏µ‡∏¢‡∏ß) ‡∏Ç‡∏¢‡∏≤‡∏¢‡πÄ‡∏ï‡πá‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á
        content_frame.grid_rowconfigure(0, weight=1) 

        # --- 4. ‡∏™‡∏£‡πâ‡∏≤‡∏á Panel ‡∏î‡πâ‡∏≤‡∏ô‡∏ã‡πâ‡∏≤‡∏¢ (‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß) ---
        # (‡∏¢‡πâ‡∏≤‡∏¢‡πÇ‡∏Ñ‡πâ‡∏î‡∏à‡∏≤‡∏Å create_profile_panel ‡∏°‡∏≤‡πÑ‡∏ß‡πâ‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ)
        profile_panel = ctk.CTkFrame(content_frame, # ‡πÉ‡∏™‡πà‡πÉ‡∏ô content_frame ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå 0
                                     fg_color="#FFFFFF", 
                                     corner_radius=20, 
                                     border_width=2, 
                                     border_color="#FFEBEE")
        # ‡∏ß‡∏≤‡∏á panel ‡∏¢‡∏∑‡∏î‡πÄ‡∏ï‡πá‡∏°‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏ô‡∏ß‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏ô‡∏ß‡∏ô‡∏≠‡∏ô (sticky="nsew")
        profile_panel.grid(row=0, column=0, sticky="nsew", padx=(0, 10), pady=10) 
        # ‡πÉ‡∏´‡πâ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå 0 ‡πÉ‡∏ô panel ‡∏Ç‡∏¢‡∏≤‡∏¢‡πÄ‡∏ï‡πá‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏ß‡πâ‡∏≤‡∏á
        profile_panel.grid_columnconfigure(0, weight=1) 

        # --- 4.1 Header ‡∏Ç‡∏≠‡∏á Panel ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß ---
        profile_panel_header = ctk.CTkFrame(profile_panel, fg_color="#FFE4E1", corner_radius=15)
        profile_panel_header.grid(row=0, column=0, padx=20, pady=20, sticky="ew") # ‡∏¢‡∏∑‡∏î‡πÄ‡∏ï‡πá‡∏°‡∏Å‡∏ß‡πâ‡∏≤‡∏á
        
        profile_panel_title = ctk.CTkLabel(
            profile_panel_header, 
            text="‚ú® ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß", 
            font=ctk.CTkFont(size=20, weight="bold"),
            text_color="#6D4C41"
        )
        profile_panel_title.pack(pady=15)

        # --- 4.2 ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ä‡πà‡∏≠‡∏á‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• (‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏ó‡∏µ‡∏•‡∏∞‡∏ä‡πà‡∏≠‡∏á) ---
        # ‡πÄ‡∏Å‡πá‡∏ö Entry widgets ‡πÑ‡∏ß‡πâ‡πÉ‡∏ô dictionary ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏ä‡πâ‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á‡∏ï‡∏≠‡∏ô‡∏Å‡∏î‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å
        self.profile_entries = {} 
        # ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• user ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏à‡∏≤‡∏Å session
        current_user_data = self.session.current_user 
        
        # --- ‡∏ä‡πà‡∏≠‡∏á‡∏Å‡∏£‡∏≠‡∏Å "‡∏ä‡∏∑‡πà‡∏≠-‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•" ---
        label_fullname = ctk.CTkLabel(
            profile_panel, text="‡∏ä‡∏∑‡πà‡∏≠-‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•:", 
            font=ctk.CTkFont(size=14), text_color="#6D4C41"
        )
        label_fullname.grid(row=1, column=0, padx=30, pady=(15, 5), sticky="w") # ‡∏ß‡∏≤‡∏á Label ‡πÅ‡∏ñ‡∏ß 1
        
        entry_fullname = ctk.CTkEntry(
            profile_panel, height=45, corner_radius=15,
            border_width=1, border_color="#FFEBEE", fg_color="#FFF0F5",
            font=ctk.CTkFont(size=14)
        )
        # ‡πÄ‡∏ï‡∏¥‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏•‡∏á‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á (‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ ‡πÉ‡∏ä‡πâ "")
        entry_fullname.insert(0, getattr(current_user_data, 'full_name', "") or "") 
        entry_fullname.grid(row=2, column=0, padx=30, pady=(0, 10), sticky="ew") # ‡∏ß‡∏≤‡∏á Entry ‡πÅ‡∏ñ‡∏ß 2
        self.profile_entries['full_name'] = entry_fullname # ‡πÄ‡∏Å‡πá‡∏ö entry ‡πÑ‡∏ß‡πâ

        # --- ‡∏ä‡πà‡∏≠‡∏á‡∏Å‡∏£‡∏≠‡∏Å "‡∏≠‡∏µ‡πÄ‡∏°‡∏•" (‡∏´‡πâ‡∏≤‡∏°‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç) ---
        label_email = ctk.CTkLabel(
            profile_panel, text="‡∏≠‡∏µ‡πÄ‡∏°‡∏•:", 
            font=ctk.CTkFont(size=14), text_color="#6D4C41"
        )
        label_email.grid(row=3, column=0, padx=30, pady=(15, 5), sticky="w") # ‡∏ß‡∏≤‡∏á Label ‡πÅ‡∏ñ‡∏ß 3
        
        entry_email = ctk.CTkEntry(
            profile_panel, height=45, corner_radius=15,
            border_width=1, border_color="#FFEBEE", fg_color="#FFF0F5",
            font=ctk.CTkFont(size=14)
        )
        entry_email.insert(0, getattr(current_user_data, 'email', "") or "")
        # ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ (disabled)
        entry_email.configure(state="disabled", text_color="gray50") 
        entry_email.grid(row=4, column=0, padx=30, pady=(0, 10), sticky="ew") # ‡∏ß‡∏≤‡∏á Entry ‡πÅ‡∏ñ‡∏ß 4
        self.profile_entries['email'] = entry_email # ‡πÄ‡∏Å‡πá‡∏ö entry ‡πÑ‡∏ß‡πâ (‡πÄ‡∏ú‡∏∑‡πà‡∏≠‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô)

        # --- ‡∏ä‡πà‡∏≠‡∏á‡∏Å‡∏£‡∏≠‡∏Å "‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå" ---
        label_phone = ctk.CTkLabel(
            profile_panel, text="‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå:", 
            font=ctk.CTkFont(size=14), text_color="#6D4C41"
        )
        label_phone.grid(row=5, column=0, padx=30, pady=(15, 5), sticky="w") # ‡∏ß‡∏≤‡∏á Label ‡πÅ‡∏ñ‡∏ß 5
        
        entry_phone = ctk.CTkEntry(
            profile_panel, height=45, corner_radius=15,
            border_width=1, border_color="#FFEBEE", fg_color="#FFF0F5",
            font=ctk.CTkFont(size=14)
        )
        entry_phone.insert(0, getattr(current_user_data, 'phone', "") or "")
        entry_phone.grid(row=6, column=0, padx=30, pady=(0, 10), sticky="ew") # ‡∏ß‡∏≤‡∏á Entry ‡πÅ‡∏ñ‡∏ß 6
        self.profile_entries['phone'] = entry_phone

        # --- ‡∏ä‡πà‡∏≠‡∏á‡∏Å‡∏£‡∏≠‡∏Å "‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏™‡πà‡∏á" (Textbox) ---
        label_address = ctk.CTkLabel(
            profile_panel, text="‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏™‡πà‡∏á:", 
            font=ctk.CTkFont(size=14), text_color="#6D4C41"
        )
        label_address.grid(row=7, column=0, padx=30, pady=(15, 5), sticky="w") # ‡∏ß‡∏≤‡∏á Label ‡πÅ‡∏ñ‡∏ß 7
        
        entry_address = ctk.CTkTextbox(
            profile_panel, height=100, corner_radius=15, # ‡πÉ‡∏ä‡πâ Textbox ‡∏™‡∏π‡∏á 100
            border_width=1, border_color="#FFEBEE", fg_color="#FFF0F5",
            font=ctk.CTkFont(size=14)
        )
        # ‡πÄ‡∏ï‡∏¥‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• (‡πÉ‡∏ä‡πâ index "1.0" ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Textbox)
        entry_address.insert("1.0", getattr(current_user_data, 'address', "") or "") 
        entry_address.grid(row=8, column=0, padx=30, pady=(0, 10), sticky="ew") # ‡∏ß‡∏≤‡∏á Textbox ‡πÅ‡∏ñ‡∏ß 8
        self.profile_entries['address'] = entry_address
            
        # --- 4.3 ‡∏õ‡∏∏‡πà‡∏°‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß ---
        save_profile_button = ctk.CTkButton(
            profile_panel, 
            text="üíæ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß", 
            command=self.save_profile, # ‡∏Å‡∏î‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏£‡∏µ‡∏¢‡∏Å save_profile
            height=45, corner_radius=15,
            font=ctk.CTkFont(size=16, weight="bold"),
            fg_color="#FFB6C1", hover_color="#FFC0CB", text_color="white"
        )
        # ‡∏ß‡∏≤‡∏á‡∏õ‡∏∏‡πà‡∏°‡πÉ‡∏ô‡πÅ‡∏ñ‡∏ß‡∏ñ‡∏±‡∏î‡πÑ‡∏õ (‡πÅ‡∏ñ‡∏ß 9)
        save_profile_button.grid(row=9, column=0, sticky="ew", padx=30, pady=25) 
        # --- ‡∏à‡∏ö Panel ‡∏î‡πâ‡∏≤‡∏ô‡∏ã‡πâ‡∏≤‡∏¢ ---

        # --- 5. ‡∏™‡∏£‡πâ‡∏≤‡∏á Panel ‡∏î‡πâ‡∏≤‡∏ô‡∏Ç‡∏ß‡∏≤ (‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô) ---
        # (‡∏¢‡πâ‡∏≤‡∏¢‡πÇ‡∏Ñ‡πâ‡∏î‡∏à‡∏≤‡∏Å create_password_panel ‡∏°‡∏≤‡πÑ‡∏ß‡πâ‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ)
        password_panel = ctk.CTkFrame(content_frame, # ‡πÉ‡∏™‡πà‡πÉ‡∏ô content_frame ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå 1
                                      fg_color="#FFFFFF", 
                                      corner_radius=20, 
                                      border_width=2, 
                                      border_color="#FFEBEE")
        # ‡∏ß‡∏≤‡∏á panel ‡∏¢‡∏∑‡∏î‡πÄ‡∏ï‡πá‡∏°‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà
        password_panel.grid(row=0, column=1, sticky="nsew", padx=(10, 0), pady=10) 
        # ‡πÉ‡∏´‡πâ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå 0 ‡πÉ‡∏ô panel ‡∏Ç‡∏¢‡∏≤‡∏¢‡πÄ‡∏ï‡πá‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏ß‡πâ‡∏≤‡∏á
        password_panel.grid_columnconfigure(0, weight=1) 

        # --- 5.1 Header ‡∏Ç‡∏≠‡∏á Panel ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô ---
        password_panel_header = ctk.CTkFrame(password_panel, fg_color="#FFE4E1", corner_radius=15)
        password_panel_header.grid(row=0, column=0, padx=20, pady=20, sticky="ew")
        
        password_panel_title = ctk.CTkLabel(
            password_panel_header, 
            text="üîí ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô", 
            font=ctk.CTkFont(size=20, weight="bold"),
            text_color="#6D4C41"
        )
        password_panel_title.pack(pady=15)
        
        # --- 5.2 ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ä‡πà‡∏≠‡∏á‡∏Å‡∏£‡∏≠‡∏Å‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô (‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏ó‡∏µ‡∏•‡∏∞‡∏ä‡πà‡∏≠‡∏á) ---
        # ‡πÄ‡∏Å‡πá‡∏ö Entry widgets ‡πÑ‡∏ß‡πâ‡πÉ‡∏ô dictionary
        self.password_entries = {} 

        # --- ‡∏ä‡πà‡∏≠‡∏á‡∏Å‡∏£‡∏≠‡∏Å "‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô" ---
        label_current_pass = ctk.CTkLabel(
            password_panel, text="‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô:", 
            font=ctk.CTkFont(size=14), text_color="#6D4C41"
        )
        label_current_pass.grid(row=1, column=0, padx=30, pady=(15, 5), sticky="w") # ‡πÅ‡∏ñ‡∏ß 1
        
        entry_current_pass = ctk.CTkEntry(
            password_panel, show="*", # ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏õ‡πá‡∏ô *
            height=45, corner_radius=15,
            border_width=1, border_color="#FFEBEE", fg_color="#FFF0F5",
            font=ctk.CTkFont(size=14)
        )
        entry_current_pass.grid(row=2, column=0, padx=30, pady=(0, 10), sticky="ew") # ‡πÅ‡∏ñ‡∏ß 2
        self.password_entries['current_password'] = entry_current_pass

        # --- ‡∏ä‡πà‡∏≠‡∏á‡∏Å‡∏£‡∏≠‡∏Å "‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà" ---
        label_new_pass = ctk.CTkLabel(
            password_panel, text="‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà:", 
            font=ctk.CTkFont(size=14), text_color="#6D4C41"
        )
        label_new_pass.grid(row=3, column=0, padx=30, pady=(15, 5), sticky="w") # ‡πÅ‡∏ñ‡∏ß 3
        
        entry_new_pass = ctk.CTkEntry(
            password_panel, show="*", height=45, corner_radius=15,
            border_width=1, border_color="#FFEBEE", fg_color="#FFF0F5",
            font=ctk.CTkFont(size=14)
        )
        entry_new_pass.grid(row=4, column=0, padx=30, pady=(0, 10), sticky="ew") # ‡πÅ‡∏ñ‡∏ß 4
        self.password_entries['new_password'] = entry_new_pass

        # --- ‡∏ä‡πà‡∏≠‡∏á‡∏Å‡∏£‡∏≠‡∏Å "‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà" ---
        label_confirm_pass = ctk.CTkLabel(
            password_panel, text="‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà:", 
            font=ctk.CTkFont(size=14), text_color="#6D4C41"
        )
        label_confirm_pass.grid(row=5, column=0, padx=30, pady=(15, 5), sticky="w") # ‡πÅ‡∏ñ‡∏ß 5
        
        entry_confirm_pass = ctk.CTkEntry(
            password_panel, show="*", height=45, corner_radius=15,
            border_width=1, border_color="#FFEBEE", fg_color="#FFF0F5",
            font=ctk.CTkFont(size=14)
        )
        entry_confirm_pass.grid(row=6, column=0, padx=30, pady=(0, 10), sticky="ew") # ‡πÅ‡∏ñ‡∏ß 6
        self.password_entries['confirm_password'] = entry_confirm_pass
            
        # --- 5.3 ‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô ---
        change_password_button = ctk.CTkButton(
            password_panel, 
            text="üîê ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô", 
            command=self.change_password, # ‡∏Å‡∏î‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏£‡∏µ‡∏¢‡∏Å change_password
            height=45, corner_radius=15,
            font=ctk.CTkFont(size=16, weight="bold"),
            fg_color="#FF6B9D", hover_color="#FF8FB3", text_color="white"
        )
        # ‡∏ß‡∏≤‡∏á‡∏õ‡∏∏‡πà‡∏°‡πÉ‡∏ô‡πÅ‡∏ñ‡∏ß‡∏ñ‡∏±‡∏î‡πÑ‡∏õ (‡πÅ‡∏ñ‡∏ß 7)
        change_password_button.grid(row=7, column=0, sticky="ew", padx=30, pady=25) 
        # --- ‡∏à‡∏ö Panel ‡∏î‡πâ‡∏≤‡∏ô‡∏Ç‡∏ß‡∏≤ ---

    # --- (‡∏•‡∏ö‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô create_profile_panel ‡πÅ‡∏•‡∏∞ create_password_panel) ---

    def save_profile(self):
        """‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç (Logic ‡πÄ‡∏î‡∏¥‡∏°)"""
        # 1. ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å self.profile_entries
        full_name_input = self.profile_entries['full_name'].get().strip()
        phone_input = self.profile_entries['phone'].get().strip()
        # ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Textbox
        address_input = self.profile_entries['address'].get("1.0", "end-1c").strip() 

        # 2. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• (‡∏ä‡∏∑‡πà‡∏≠‡∏´‡πâ‡∏≤‡∏°‡∏ß‡πà‡∏≤‡∏á)
        if not full_name_input:
            messagebox.showwarning("‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö", "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠-‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•", parent=self)
            return # ‡∏´‡∏¢‡∏∏‡∏î‡∏ó‡∏≥‡∏á‡∏≤‡∏ô

        # 3. ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
        current_user_id = self.session.current_user.user_id
        update_success = self.db.update_user_profile(current_user_id, full_name_input, phone_input, address_input)
        
        # 4. ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
        if update_success:
            # --- ‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç: ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô session (RAM) ‡∏î‡πâ‡∏ß‡∏¢ ---
            self.session.current_user.full_name = full_name_input
            self.session.current_user.phone = phone_input
            self.session.current_user.address = address_input
            
            messagebox.showinfo("‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", "‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß", parent=self)
            self.on_show() # Refresh ‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÄ‡∏´‡πá‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà (‡∏ñ‡πâ‡∏≤‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô)
        else:
            messagebox.showerror("‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î", "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß‡πÑ‡∏î‡πâ ‡πÇ‡∏õ‡∏£‡∏î‡∏•‡∏≠‡∏á‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á", parent=self)

    def change_password(self):
        """‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô (Logic ‡πÄ‡∏î‡∏¥‡∏°)"""
        # 1. ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å self.password_entries
        current_password_input = self.password_entries['current_password'].get()
        new_password_input = self.password_entries['new_password'].get()
        confirm_password_input = self.password_entries['confirm_password'].get()

        # 2. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏ï‡πâ‡∏ô
        # 2.1 ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ñ‡∏£‡∏ö‡∏ó‡∏∏‡∏Å‡∏ä‡πà‡∏≠‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
        if not current_password_input or not new_password_input or not confirm_password_input:
            messagebox.showwarning("‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö", "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ó‡∏∏‡∏Å‡∏ä‡πà‡∏≠‡∏á", parent=self)
            return
        # 2.2 ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡∏£‡∏´‡∏±‡∏™‡πÉ‡∏´‡∏°‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
        if new_password_input != confirm_password_input:
            messagebox.showerror("‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î", "‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô", parent=self)
            return
        # 2.3 ‡πÄ‡∏ä‡πá‡∏Ñ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏ß‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà (‡πÅ‡∏Å‡πâ‡πÄ‡∏õ‡πá‡∏ô 8 ‡∏ï‡∏≤‡∏° ui_login)
        if len(new_password_input) < 8: 
            messagebox.showerror("‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î", "‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 8 ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£", parent=self)
            return
            
        # 3. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏Å‡∏±‡∏ö‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
        current_user_id = self.session.current_user.user_id
        # ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• user (‡∏£‡∏ß‡∏° password ‡∏ó‡∏µ‡πà hash ‡πÑ‡∏ß‡πâ) ‡∏à‡∏≤‡∏Å DB
        user_data_from_db = self.db.get_user_by_id(current_user_id) 
        
        # --- ‡πÉ‡∏ä‡πâ bcrypt.checkpw ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö ---
        # ‡∏ï‡πâ‡∏≠‡∏á encode ‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏ó‡∏µ‡πà user ‡∏Å‡∏£‡∏≠‡∏Å ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô bytes ‡∏Å‡πà‡∏≠‡∏ô
        current_password_bytes = current_password_input.encode('utf-8') 
        # hashed_password ‡∏à‡∏≤‡∏Å DB (‡πÄ‡∏õ‡πá‡∏ô bytes ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß)
        hashed_password_from_db = user_data_from_db['password'] 
        
        # ‡∏ñ‡πâ‡∏≤‡∏´‡∏≤ user ‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠ ‡∏´‡∏£‡∏∑‡∏≠ checkpw ‡πÑ‡∏°‡πà‡∏ú‡πà‡∏≤‡∏ô
        if not user_data_from_db or not bcrypt.checkpw(current_password_bytes, hashed_password_from_db):
            messagebox.showerror("‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î", "‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á", parent=self)
            return # ‡∏´‡∏¢‡∏∏‡∏î‡∏ó‡∏≥‡∏á‡∏≤‡∏ô
            
        # 4. ‡∏ñ‡πâ‡∏≤‡∏ú‡πà‡∏≤‡∏ô‡∏´‡∏°‡∏î: ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
        update_success = self.db.update_user_password(current_user_id, new_password_input) 
        
        # 5. ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
        if update_success:
            messagebox.showinfo("‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", "‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß", parent=self)
            # ‡∏•‡πâ‡∏≤‡∏á‡∏Ñ‡πà‡∏≤‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á‡∏Å‡∏£‡∏≠‡∏Å‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
            for entry_widget in self.password_entries.values():
                entry_widget.delete(0, 'end')
        else:
            messagebox.showerror("‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î", "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏î‡πâ ‡πÇ‡∏õ‡∏£‡∏î‡∏•‡∏≠‡∏á‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á", parent=self)