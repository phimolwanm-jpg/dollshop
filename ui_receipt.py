import customtkinter as ctk
from tkinter import messagebox
import os # <-- (NEW) Import 
import traceback # <-- (NEW) Import ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Debug

# --- (NEW) Import ‡∏ï‡∏±‡∏ß‡∏™‡∏£‡πâ‡∏≤‡∏á PDF ---
try:
    from pdf_receipt_generator import generate_receipt_pdf
except ImportError:
    print("!!! ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå 'pdf_receipt_generator.py' !!!")
    generate_receipt_pdf = None # ‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏õ‡πá‡∏ô None ‡∏ñ‡πâ‡∏≤ Import ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ
# --- (‡∏à‡∏ö‡∏™‡πà‡∏ß‡∏ô NEW) ---


class ReceiptWindow(ctk.CTkFrame):
    def __init__(self, parent, main_app):
        super().__init__(parent, fg_color="#FFF0F5") 
        self.main_app = main_app
        self.db = main_app.db 
        self.order_id_to_show = None 
        
    def on_show(self, order_id=None):
        """
        ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏ô‡∏µ‡πâ: ‡∏£‡∏±‡∏ö order_id, ‡∏•‡∏ö UI ‡πÄ‡∏Å‡πà‡∏≤, ‡∏™‡∏£‡πâ‡∏≤‡∏á UI ‡πÉ‡∏´‡∏°‡πà
        """
        self.order_id_to_show = order_id 
        
        for widget in self.winfo_children():
            widget.destroy()
        
        if not self.order_id_to_show:
            # --- ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö: ‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏ô‡πâ‡∏≤ Error ---
            error_label = ctk.CTkLabel(
                self, 
                text="‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠",
                font=ctk.CTkFont(size=24, weight="bold"),
                text_color="#F44336"
            )
            error_label.pack(expand=True) 
            
            error_back_button = ctk.CTkButton(
                self,
                text="‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å",
                command=lambda: self.main_app.navigate_to('HomeWindow'), 
                fg_color="#FFB6C1", 
                hover_color="#FFC0CB"
            )
            error_back_button.pack(pady=20)
        else:
            # --- ‡∏ñ‡πâ‡∏≤‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö order_id: ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏ô‡πâ‡∏≤ UI ‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à ---
            self.setup_ui() 

    def setup_ui(self):
        """‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏≠‡∏á‡∏Ñ‡πå‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö UI ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏Ç‡∏≠‡∏á‡∏´‡∏ô‡πâ‡∏≤‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à"""
        # ( ... ‡πÇ‡∏Ñ‡πâ‡∏î‡∏™‡πà‡∏ß‡∏ô setup_ui ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏° ... )
        # ( ... ‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏ï‡πà‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î 55 ‡∏ñ‡∏∂‡∏á 414 ‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏î‡∏¥‡∏°‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì ... )
        
        # --- 1. ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡∏¢‡∏≤‡∏¢‡∏ï‡∏±‡∏ß‡∏Ç‡∏≠‡∏á Grid ‡∏´‡∏•‡∏±‡∏Å ---
        self.grid_columnconfigure(0, weight=1) 
        self.grid_rowconfigure(1, weight=1)    

        # --- 2. ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡πà‡∏ß‡∏ô‡∏´‡∏±‡∏ß (Header) ---
        header_frame = ctk.CTkFrame(
            self, 
            fg_color="#FFFFFF", 
            corner_radius=0, 
            height=70, 
            border_width=1, 
            border_color="#FFEBEE"
        )
        header_frame.grid(row=0, column=0, sticky="ew", pady=(0, 20)) 
        header_frame.grid_columnconfigure(1, weight=1) 
        
        header_title = ctk.CTkLabel(
            header_frame,
            text="üßæ ‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠",
            font=ctk.CTkFont(size=28, weight="bold"),
            text_color="#FFB6C1"
        )
        header_title.pack(side="left", padx=30, pady=20)
        
        header_buttons_frame = ctk.CTkFrame(header_frame, fg_color="transparent")
        header_buttons_frame.pack(side="right", padx=20)
        
        # ‡∏õ‡∏∏‡πà‡∏° "‡∏û‡∏¥‡∏°‡∏û‡πå" (‡∏¢‡∏±‡∏á‡∏Å‡∏î‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏à‡∏£‡∏¥‡∏á)
        print_button = ctk.CTkButton(
            header_buttons_frame,
            text="üñ®Ô∏è ‡∏û‡∏¥‡∏°‡∏û‡πå (PDF)", # (EDITED) ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
            fg_color="#4CAF50", 
            hover_color="#66BB6A",
            command=self.print_receipt # (EDITED) ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô print_receipt (‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç)
        )
        print_button.pack(side="left", padx=5)
        
        home_button = ctk.CTkButton(
            header_buttons_frame,
            text="üè† ‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å",
            fg_color="transparent",
            text_color="#FFB6C1",
            hover_color="#FFE4E1",
            command=lambda: self.main_app.navigate_to('HomeWindow') 
        )
        home_button.pack(side="left", padx=5)
        
        # --- 3. ‡∏™‡∏£‡πâ‡∏≤‡∏á Frame ‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à (‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏î‡πâ) ---
        receipt_container_scrollable = ctk.CTkScrollableFrame(
            self, 
            fg_color="transparent",
            scrollbar_button_color="#FFB6C1"
        )
        receipt_container_scrollable.grid(row=1, column=0, sticky="nsew", padx=30, pady=20) 
        
        # --- 4. ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πå‡∏î‡∏™‡∏µ‡∏Ç‡∏≤‡∏ß (‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏Å‡∏£‡∏∞‡∏î‡∏≤‡∏©‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à) ---
        receipt_card = ctk.CTkFrame(
            receipt_container_scrollable, 
            fg_color="#FFFFFF",
            corner_radius=20,
            border_width=3,
            border_color="#FFB6C1" 
        )
        receipt_card.pack(fill="both", expand=True, padx=50, pady=20) 
        
        # --- 5. ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à ---
        order_details_dict = self.db.get_order_details(self.order_id_to_show) 
        
        if not order_details_dict:
            error_label_inside_card = ctk.CTkLabel(
                receipt_card, 
                text="‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠",
                text_color="#F44336" 
            )
            error_label_inside_card.pack(pady=50)
        else:
            # ( ... ‡πÇ‡∏Ñ‡πâ‡∏î‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏Ç‡∏≠‡∏á setup_ui (5.3 - 5.12) ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏° ... )
            # --- 5.3 ‡∏™‡πà‡∏ß‡∏ô Logo ‡πÅ‡∏•‡∏∞‡∏ä‡∏∑‡πà‡∏≠‡∏£‡πâ‡∏≤‡∏ô ---
            shop_logo_frame = ctk.CTkFrame(receipt_card, fg_color="#FFE4E1", corner_radius=15)
            shop_logo_frame.pack(fill="x", padx=30, pady=(30, 20))
            shop_icon_label = ctk.CTkLabel(shop_logo_frame, text="üéÄ", font=ctk.CTkFont(size=60))
            shop_icon_label.pack(pady=(20, 10))
            shop_name_label = ctk.CTkLabel(shop_logo_frame, text="Dollie Shop", font=ctk.CTkFont(size=32, weight="bold"), text_color="#FF6B9D")
            shop_name_label.pack()
            shop_subtitle_label = ctk.CTkLabel(shop_logo_frame, text="‡∏£‡πâ‡∏≤‡∏ô‡∏Ç‡∏≤‡∏¢‡∏ï‡∏∏‡πä‡∏Å‡∏ï‡∏≤‡∏ô‡πà‡∏≤‡∏£‡∏±‡∏Å", font=ctk.CTkFont(size=14), text_color="#6D4C41")
            shop_subtitle_label.pack(pady=(0, 20))
            
            # --- 5.4 ‡∏™‡πà‡∏ß‡∏ô Title "‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏¥‡∏ô" ---
            receipt_title_frame = ctk.CTkFrame(receipt_card, fg_color="transparent")
            receipt_title_frame.pack(fill="x", padx=30, pady=20)
            receipt_title_label = ctk.CTkLabel(receipt_title_frame, text="‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏¥‡∏ô / RECEIPT", font=ctk.CTkFont(size=24, weight="bold"), text_color="#6D4C41")
            receipt_title_label.pack()
            
            # --- 5.5 ‡∏™‡πà‡∏ß‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Order ---
            order_info_frame = ctk.CTkFrame(receipt_card, fg_color="#FFF0F5", corner_radius=15)
            order_info_frame.pack(fill="x", padx=30, pady=20)
            order_info_frame.grid_columnconfigure((0, 1), weight=1)
            
            left_info_container = ctk.CTkFrame(order_info_frame, fg_color="transparent")
            left_info_container.grid(row=0, column=0, sticky="w", padx=20, pady=20) 
            
            label_order_id = ctk.CTkLabel(left_info_container, text="‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à:", font=ctk.CTkFont(size=13), text_color="gray50", anchor="w")
            label_order_id.grid(row=0, column=0, sticky="w", pady=3)
            value_order_id = ctk.CTkLabel(left_info_container, text=f"#{order_details_dict['order_id']}", font=ctk.CTkFont(size=13, weight="bold"), text_color="#6D4C41", anchor="w")
            value_order_id.grid(row=0, column=1, sticky="w", padx=(10, 0), pady=3)
            
            order_date_str = order_details_dict.get('created_at', '-') 
            if order_date_str and len(order_date_str) > 16:
                order_date_str = order_date_str[:16] 
            label_date = ctk.CTkLabel(left_info_container, text="‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà:", font=ctk.CTkFont(size=13), text_color="gray50", anchor="w")
            label_date.grid(row=1, column=0, sticky="w", pady=3)
            value_date = ctk.CTkLabel(left_info_container, text=order_date_str, font=ctk.CTkFont(size=13, weight="bold"), text_color="#6D4C41", anchor="w")
            value_date.grid(row=1, column=1, sticky="w", padx=(10, 0), pady=3)
            
            label_customer = ctk.CTkLabel(left_info_container, text="‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤:", font=ctk.CTkFont(size=13), text_color="gray50", anchor="w")
            label_customer.grid(row=2, column=0, sticky="w", pady=3)
            value_customer = ctk.CTkLabel(left_info_container, text=order_details_dict.get('full_name', '-'), font=ctk.CTkFont(size=13, weight="bold"), text_color="#6D4C41", anchor="w")
            value_customer.grid(row=2, column=1, sticky="w", padx=(10, 0), pady=3)
            
            right_info_container = ctk.CTkFrame(order_info_frame, fg_color="transparent")
            right_info_container.grid(row=0, column=1, sticky="w", padx=20, pady=20) 
            
            order_status = order_details_dict.get('status', 'unknown')
            status_text_map = {'pending': '‚è≥ ‡∏£‡∏≠‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£', 'confirmed': '‚úÖ ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÅ‡∏•‡πâ‡∏ß', 'shipped': 'üöö ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏à‡∏±‡∏î‡∏™‡πà‡∏á', 'delivered': '‚úîÔ∏è ‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à', 'cancelled': '‚ùå ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å'}
            status_display_text = status_text_map.get(order_status, order_status)
            
            label_status = ctk.CTkLabel(right_info_container, text="‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞:", font=ctk.CTkFont(size=13), text_color="gray50", anchor="w")
            label_status.grid(row=0, column=0, sticky="w", pady=3)
            value_status = ctk.CTkLabel(right_info_container, text=status_display_text, font=ctk.CTkFont(size=13, weight="bold"), text_color="#6D4C41", anchor="w")
            value_status.grid(row=0, column=1, sticky="w", padx=(10, 0), pady=3)
            
            label_payment = ctk.CTkLabel(right_info_container, text="‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô:", font=ctk.CTkFont(size=13), text_color="gray50", anchor="w")
            label_payment.grid(row=1, column=0, sticky="w", pady=3)
            value_payment = ctk.CTkLabel(right_info_container, text=order_details_dict.get('payment_method', '-'), font=ctk.CTkFont(size=13, weight="bold"), text_color="#6D4C41", anchor="w")
            value_payment.grid(row=1, column=1, sticky="w", padx=(10, 0), pady=3)
            
            # --- 5.6 ‡πÄ‡∏™‡πâ‡∏ô‡∏Ñ‡∏±‡πà‡∏ô ---
            separator1 = ctk.CTkFrame(receipt_card, height=2, fg_color="#FFEBEE")
            separator1.pack(fill="x", padx=30, pady=10)
            
            # --- 5.7 ‡∏™‡πà‡∏ß‡∏ô‡∏´‡∏±‡∏ß‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ ---
            items_table_header = ctk.CTkFrame(receipt_card, fg_color="#FFE4E1", corner_radius=10)
            items_table_header.pack(fill="x", padx=30, pady=(20, 10))
            
            header_grid_layout = ctk.CTkFrame(items_table_header, fg_color="transparent")
            header_grid_layout.pack(fill="x", padx=15, pady=10)
            header_grid_layout.grid_columnconfigure(0, weight=2) 
            header_grid_layout.grid_columnconfigure(1, weight=1) 
            header_grid_layout.grid_columnconfigure(2, weight=1) 
            
            header_label_item = ctk.CTkLabel(header_grid_layout, text="‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤", font=ctk.CTkFont(size=14, weight="bold"), text_color="#6D4C41", anchor="w")
            header_label_item.grid(row=0, column=0, sticky="w", padx=5)
            header_label_qty = ctk.CTkLabel(header_grid_layout, text="‡∏à‡∏≥‡∏ô‡∏ß‡∏ô", font=ctk.CTkFont(size=14, weight="bold"), text_color="#6D4C41", anchor="center")
            header_label_qty.grid(row=0, column=1, padx=5)
            header_label_price = ctk.CTkLabel(header_grid_layout, text="‡∏£‡∏≤‡∏Ñ‡∏≤", font=ctk.CTkFont(size=14, weight="bold"), text_color="#6D4C41", anchor="e")
            header_label_price.grid(row=0, column=2, sticky="e", padx=5)
            
            # --- 5.8 ‡∏™‡πà‡∏ß‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ ---
            items_list_container = ctk.CTkFrame(receipt_card, fg_color="transparent")
            items_list_container.pack(fill="x", padx=30)
            
            items_string_from_db = order_details_dict.get('items', '') 
            if items_string_from_db:
                item_strings = items_string_from_db.split(', ') 
                for single_item_string in item_strings:
                    parts = single_item_string.rsplit(' x', 1) 
                    if len(parts) == 2: 
                        item_name = parts[0]
                        item_quantity = parts[1]
                    else: 
                        item_name = single_item_string 
                        item_quantity = "1" 
                    
                    item_row_frame = ctk.CTkFrame(items_list_container, fg_color="#FFF0F5", corner_radius=10)
                    item_row_frame.pack(fill="x", pady=5)
                    
                    item_row_grid = ctk.CTkFrame(item_row_frame, fg_color="transparent")
                    item_row_grid.pack(fill="x", padx=15, pady=10)
                    item_row_grid.grid_columnconfigure(0, weight=2) 
                    item_row_grid.grid_columnconfigure(1, weight=1) 
                    item_row_grid.grid_columnconfigure(2, weight=1) 
                    
                    item_name_label_row = ctk.CTkLabel(item_row_grid, text=f"‚Ä¢ {item_name}", font=ctk.CTkFont(size=14), text_color="#6D4C41", anchor="w")
                    item_name_label_row.grid(row=0, column=0, sticky="w", padx=5)
                    
                    item_qty_label_row = ctk.CTkLabel(item_row_grid, text=f"x{item_quantity}", font=ctk.CTkFont(size=14), text_color="#FFB6C1", anchor="center")
                    item_qty_label_row.grid(row=0, column=1, padx=5)
                    
                    item_price_label_row = ctk.CTkLabel(item_row_grid, text="-", font=ctk.CTkFont(size=14), text_color="#6D4C41", anchor="e")
                    item_price_label_row.grid(row=0, column=2, sticky="e", padx=5)

            # --- 5.9 ‡πÄ‡∏™‡πâ‡∏ô‡∏Ñ‡∏±‡πà‡∏ô ---
            separator2 = ctk.CTkFrame(receipt_card, height=2, fg_color="#FFEBEE")
            separator2.pack(fill="x", padx=30, pady=20)
            
            # --- 5.10 ‡∏™‡πà‡∏ß‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏° ---
            total_display_frame_outer = ctk.CTkFrame(receipt_card, fg_color="#FFE4E1", corner_radius=15)
            total_display_frame_outer.pack(fill="x", padx=30, pady=20)
            
            total_grid_layout = ctk.CTkFrame(total_display_frame_outer, fg_color="transparent")
            total_grid_layout.pack(fill="x", padx=20, pady=15)
            
            total_text_label_receipt = ctk.CTkLabel(total_grid_layout, text="‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏™‡∏¥‡πâ‡∏ô:", font=ctk.CTkFont(size=20, weight="bold"), text_color="#6D4C41")
            total_text_label_receipt.pack(side="left")
            
            total_value_label_receipt = ctk.CTkLabel(
                total_grid_layout,
                text=f"‡∏ø{order_details_dict.get('total_amount', 0):,.2f}", 
                font=ctk.CTkFont(size=28, weight="bold"),
                text_color="#FF6B9D"
            )
            total_value_label_receipt.pack(side="right")
            
            # --- 5.11 ‡∏™‡πà‡∏ß‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏à‡∏±‡∏î‡∏™‡πà‡∏á ---
            shipping_address_from_db = order_details_dict.get('shipping_address')
            if shipping_address_from_db: 
                shipping_address_frame = ctk.CTkFrame(receipt_card, fg_color="#FFF0F5", corner_radius=15)
                shipping_address_frame.pack(fill="x", padx=30, pady=20)
                
                address_title_label = ctk.CTkLabel(shipping_address_frame, text="üìç ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏à‡∏±‡∏î‡∏™‡πà‡∏á", font=ctk.CTkFont(size=16, weight="bold"), text_color="#6D4C41", anchor="w")
                address_title_label.pack(anchor="w", padx=20, pady=(15, 5))
                
                address_value_label = ctk.CTkLabel(shipping_address_frame, text=shipping_address_from_db, font=ctk.CTkFont(size=14), text_color="#6D4C41", anchor="w", justify="left")
                address_value_label.pack(anchor="w", padx=20, pady=(0, 15))
            
            # --- 5.12 ‡∏™‡πà‡∏ß‡∏ô Footer ---
            receipt_footer_frame = ctk.CTkFrame(receipt_card, fg_color="transparent")
            receipt_footer_frame.pack(fill="x", padx=30, pady=(20, 30))
            
            footer_text1 = ctk.CTkLabel(receipt_footer_frame, text="‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£ üíñ", font=ctk.CTkFont(size=18, weight="bold"), text_color="#FFB6C1")
            footer_text1.pack()
            
            footer_text2 = ctk.CTkLabel(receipt_footer_frame, text="Dollie Shop | www.dollieshop.com | ‡πÇ‡∏ó‡∏£: 02-xxx-xxxx", font=ctk.CTkFont(size=12), text_color="gray50")
            footer_text2.pack(pady=(5, 0))
    
    # --- (EDITED) ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏û‡∏¥‡∏°‡∏û‡πå‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à ---
    def print_receipt(self):
        """‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏û‡∏¥‡∏°‡∏û‡πå‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à (‡∏™‡∏£‡πâ‡∏≤‡∏á PDF ‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡∏¥‡∏î‡πÑ‡∏ü‡∏•‡πå)"""
        
        # 1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ Import generator ‡∏°‡∏≤‡πÑ‡∏î‡πâ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
        if not generate_receipt_pdf:
            messagebox.showerror(
                "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î",
                "‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÇ‡∏°‡∏î‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á PDF (pdf_receipt_generator.py)\n‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á",
                parent=self
            )
            return

        # 2. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ Order ID ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
        if not self.order_id_to_show:
            messagebox.showerror("‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î", "‡πÑ‡∏°‡πà‡∏û‡∏ö Order ID", parent=self)
            return
        
        try:
            # 3. ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ generator (‡∏™‡πà‡∏á self.db ‡πÑ‡∏õ‡∏î‡πâ‡∏ß‡∏¢)
            print(f"‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á PDF ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Order ID: {self.order_id_to_show}")
            pdf_file_path = generate_receipt_pdf(self.order_id_to_show, self.db)
            
            if pdf_file_path:
                # 4. ‡∏ñ‡πâ‡∏≤‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
                abs_path = os.path.abspath(pdf_file_path)
                messagebox.showinfo(
                    "‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à",
                    f"‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à PDF ‡∏ó‡∏µ‡πà:\n{abs_path}\n\n‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡πÄ‡∏õ‡∏¥‡∏î‡πÑ‡∏ü‡∏•‡πå...",
                    parent=self
                )
                
                # 5. ‡∏•‡∏≠‡∏á‡πÄ‡∏õ‡∏¥‡∏î‡πÑ‡∏ü‡∏•‡πå PDF ‡∏î‡πâ‡∏ß‡∏¢‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏° default ‡∏Ç‡∏≠‡∏á‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á
                try:
                    os.startfile(abs_path) # ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Windows
                except AttributeError:
                    try:
                        os.system(f'open "{abs_path}"') # ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö macOS
                    except Exception:
                        try:
                            os.system(f'xdg-open "{abs_path}"') # ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Linux
                        except Exception as e_open:
                            print(f"‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏õ‡∏¥‡∏î‡πÑ‡∏ü‡∏•‡πå PDF ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡πÑ‡∏î‡πâ: {e_open}")
                            messagebox.showwarning("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏õ‡∏¥‡∏î‡πÑ‡∏ü‡∏•‡πå", 
                                                   f"‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏õ‡∏¥‡∏î‡πÑ‡∏ü‡∏•‡πå PDF ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡πÑ‡∏î‡πâ\n‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÑ‡∏õ‡∏ó‡∏µ‡πà:\n{abs_path}", 
                                                   parent=self)
            else:
                # 6. ‡∏ñ‡πâ‡∏≤ generator ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤ None (‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à)
                messagebox.showerror("‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î", "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå PDF ‡πÑ‡∏î‡πâ (‡∏≠‡∏≤‡∏à‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Order)", parent=self)
                
        except Exception as e:
            # 7. ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ Error ‡∏£‡πâ‡∏≤‡∏¢‡πÅ‡∏£‡∏á
            messagebox.showerror("‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏£‡πâ‡∏≤‡∏¢‡πÅ‡∏£‡∏á", f"‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏Ç‡∏ì‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á PDF: {e}", parent=self)
            traceback.print_exc() # ‡∏û‡∏¥‡∏°‡∏û‡πå Error ‡πÄ‡∏ï‡πá‡∏°‡πÜ ‡∏•‡∏á‡πÉ‡∏ô Console