import customtkinter as ctk
# --- ‡πÄ‡∏û‡∏¥‡πà‡∏° import ‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ ---
from PIL import Image 
import os 
# --- ‡∏à‡∏ö‡∏™‡πà‡∏ß‡∏ô import ‡πÄ‡∏û‡∏¥‡πà‡∏° ---

# --- Import ‡∏™‡πà‡∏ß‡∏ô‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏´‡∏•‡∏±‡∏Å ---
from database import Database
# ‡πÉ‡∏ä‡πâ Session, User, Cart ‡∏à‡∏≤‡∏Å models.py (‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏±‡∏ö‡πÉ‡∏´‡πâ‡∏á‡πà‡∏≤‡∏¢‡πÅ‡∏•‡πâ‡∏ß)
from models import Session, User, Cart 
# --- ‡∏•‡∏ö import Assets ---
# from assets_loader import Assets 

# --- Import ‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠ UI ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ---
from ui_login import LoginWindow
from ui_home import HomeWindow
from ui_admin import AdminWindow
from ui_admin_dashboard import AdminDashboardWindow
from ui_cart import CartWindow
from ui_checkout import CheckoutWindow
from ui_order_history import OrderHistoryWindow
from ui_product_list import ProductListWindow
from ui_admin_orders import AdminOrdersWindow 
from ui_profile import ProfileWindow
from ui_thankyou import ThankYouWindow
from ui_receipt import ReceiptWindow
from ui_about import AboutWindow  
from ui_sales_history import SalesHistoryWindow

class MainApplication(ctk.CTk):
    """
    ‡∏Ñ‡∏•‡∏≤‡∏™‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°
    ‡∏ó‡∏≥‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô "‡∏ö‡πâ‡∏≤‡∏ô" ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡πá‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡∏ï‡πà‡∏≤‡∏á‡πÜ (Frame) ‡πÑ‡∏ß‡πâ
    ‡πÅ‡∏•‡πâ‡∏ß‡∏™‡∏•‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏ó‡∏µ‡∏•‡∏∞‡∏´‡∏ô‡πâ‡∏≤
    """
    def __init__(self):
        # --- 1. ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á‡∏´‡∏•‡∏±‡∏Å ---
        super().__init__() # ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å init ‡∏Ç‡∏≠‡∏á CTk

        self.title("üéÄ Dollie Shop üéÄ") # ‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏ô title bar
        self.geometry("1280x800")      # ‡∏Ç‡∏ô‡∏≤‡∏î‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
        self.minsize(1024, 768)       # ‡∏Ç‡∏ô‡∏≤‡∏î‡πÄ‡∏•‡πá‡∏Å‡∏™‡∏∏‡∏î‡∏ó‡∏µ‡πà‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï
        ctk.set_appearance_mode("light") # ‡πÉ‡∏ä‡πâ‡πÇ‡∏´‡∏°‡∏î‡∏™‡∏ß‡πà‡∏≤‡∏á

        # --- 2. ‡∏™‡∏£‡πâ‡∏≤‡∏á object ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏±‡∏ô‡∏ó‡∏±‡πâ‡∏á‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏° ---
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á object ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏∏‡∏¢‡∏Å‡∏±‡∏ö database (‡πÑ‡∏ü‡∏•‡πå dollshop.db)
        self.db = Database() 
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á object ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• user ‡∏ó‡∏µ‡πà login ‡∏≠‡∏¢‡∏π‡πà (‡∏ï‡∏≠‡∏ô‡πÅ‡∏£‡∏Å‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ)
        self.session = Session() 
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á object ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡πá‡∏ö‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ (‡∏ï‡∏≠‡∏ô‡πÅ‡∏£‡∏Å‡∏¢‡∏±‡∏á‡∏ß‡πà‡∏≤‡∏á)
        self.cart = Cart()       
        # --- ‡∏•‡∏ö self.assets ‡∏≠‡∏≠‡∏Å ---
        # self.assets = Assets() 

        # --- ‡πÄ‡∏Å‡πá‡∏ö path ‡∏´‡∏•‡∏±‡∏Å‡∏Ç‡∏≠‡∏á‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Å‡∏ï‡πå ---
        # os.path.dirname(__file__) ‡∏Ñ‡∏∑‡∏≠ path ‡∏Ç‡∏≠‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡πÑ‡∏ü‡∏•‡πå main.py ‡∏ô‡∏µ‡πâ‡∏≠‡∏¢‡∏π‡πà
        self.base_path = os.path.dirname(__file__) 

        # --- 3. ‡∏™‡∏£‡πâ‡∏≤‡∏á "‡πÄ‡∏ß‡∏ó‡∏µ" ‡∏´‡∏•‡∏±‡∏Å (Container Frame) ---
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á Frame ‡πÉ‡∏™‡πÜ ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏Ç‡∏¢‡∏≤‡∏¢‡πÄ‡∏ï‡πá‡∏°‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á‡πÄ‡∏™‡∏°‡∏≠
        container_frame = ctk.CTkFrame(self, fg_color="transparent") 
        # .pack() ‡πÄ‡∏õ‡πá‡∏ô‡∏ß‡∏¥‡∏ò‡∏µ‡∏ß‡∏≤‡∏á widget ‡πÅ‡∏ö‡∏ö‡∏á‡πà‡∏≤‡∏¢‡πÜ
        # side="top" ‡∏ä‡∏¥‡∏î‡∏ö‡∏ô, fill="both" ‡∏Ç‡∏¢‡∏≤‡∏¢‡πÄ‡∏ï‡πá‡∏°, expand=True ‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡πÉ‡∏´‡πâ‡∏Ç‡∏¢‡∏≤‡∏¢
        container_frame.pack(side="top", fill="both", expand=True) 
        # ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÉ‡∏´‡πâ‡πÅ‡∏ñ‡∏ß 0 ‡πÅ‡∏•‡∏∞ ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå 0 ‡πÉ‡∏ô container ‡∏Ç‡∏¢‡∏≤‡∏¢‡πÑ‡∏î‡πâ (‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö .grid() ‡∏Ç‡πâ‡∏≤‡∏á‡πÉ‡∏ô)
        container_frame.grid_rowconfigure(0, weight=1)    
        container_frame.grid_columnconfigure(0, weight=1) 

        # --- 4. ‡∏™‡∏£‡πâ‡∏≤‡∏á Dictionary (‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡πá‡∏ö) ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ---
        # ‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡πÄ‡∏Å‡πá‡∏ö object ‡∏Ç‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠ (Frame) ‡πÑ‡∏ß‡πâ‡πÉ‡∏ô‡∏ô‡∏µ‡πâ
        # key ‡∏Ñ‡∏∑‡∏≠ ‡∏ä‡∏∑‡πà‡∏≠‡∏Ñ‡∏•‡∏≤‡∏™ (‡πÄ‡∏ä‡πà‡∏ô "LoginWindow"), value ‡∏Ñ‡∏∑‡∏≠ object ‡∏Ç‡∏≠‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏ô‡∏±‡πâ‡∏ô
        self.all_app_frames = {} 

        # --- 5. ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠ UI ‡∏ó‡∏∏‡∏Å‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏ß‡πâ‡πÄ‡∏•‡∏¢ (‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏ï‡∏£‡∏á‡πÜ ‡∏ó‡∏µ‡∏•‡∏∞‡∏´‡∏ô‡πâ‡∏≤) ---
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á object ‡∏Ç‡∏≠‡∏á LoginWindow
        login_page = LoginWindow(parent=container_frame, main_app=self) 
        # ‡πÄ‡∏Å‡πá‡∏ö‡πÉ‡∏ô dictionary
        self.all_app_frames["LoginWindow"] = login_page 
        # ‡∏ß‡∏≤‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠ login ‡∏•‡∏á‡πÉ‡∏ô container (‡πÅ‡∏ñ‡∏ß 0, ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå 0) ‡πÅ‡∏•‡∏∞‡πÉ‡∏´‡πâ‡∏¢‡∏∑‡∏î‡πÄ‡∏ï‡πá‡∏° (sticky="nsew")
        login_page.grid(row=0, column=0, sticky="nsew") 

        # ‡∏™‡∏£‡πâ‡∏≤‡∏á object ‡∏Ç‡∏≠‡∏á HomeWindow
        home_page = HomeWindow(parent=container_frame, main_app=self)
        self.all_app_frames["HomeWindow"] = home_page
        home_page.grid(row=0, column=0, sticky="nsew")

        # ‡∏™‡∏£‡πâ‡∏≤‡∏á object ‡∏Ç‡∏≠‡∏á AdminWindow
        admin_page = AdminWindow(parent=container_frame, main_app=self)
        self.all_app_frames["AdminWindow"] = admin_page
        admin_page.grid(row=0, column=0, sticky="nsew")
        
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á object ‡∏Ç‡∏≠‡∏á AdminDashboardWindow
        admin_dashboard_page = AdminDashboardWindow(parent=container_frame, main_app=self)
        self.all_app_frames["AdminDashboardWindow"] = admin_dashboard_page
        admin_dashboard_page.grid(row=0, column=0, sticky="nsew")
        
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á object ‡∏Ç‡∏≠‡∏á CartWindow
        cart_page = CartWindow(parent=container_frame, main_app=self)
        self.all_app_frames["CartWindow"] = cart_page
        cart_page.grid(row=0, column=0, sticky="nsew")
        
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á object ‡∏Ç‡∏≠‡∏á CheckoutWindow
        checkout_page = CheckoutWindow(parent=container_frame, main_app=self)
        self.all_app_frames["CheckoutWindow"] = checkout_page
        checkout_page.grid(row=0, column=0, sticky="nsew")
        
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á object ‡∏Ç‡∏≠‡∏á OrderHistoryWindow
        order_history_page = OrderHistoryWindow(parent=container_frame, main_app=self)
        self.all_app_frames["OrderHistoryWindow"] = order_history_page
        order_history_page.grid(row=0, column=0, sticky="nsew")
        
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á object ‡∏Ç‡∏≠‡∏á ProductListWindow
        product_list_page = ProductListWindow(parent=container_frame, main_app=self)
        self.all_app_frames["ProductListWindow"] = product_list_page
        product_list_page.grid(row=0, column=0, sticky="nsew")
        
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á object ‡∏Ç‡∏≠‡∏á ThankYouWindow
        thank_you_page = ThankYouWindow(parent=container_frame, main_app=self)
        self.all_app_frames["ThankYouWindow"] = thank_you_page
        thank_you_page.grid(row=0, column=0, sticky="nsew")
        
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á object ‡∏Ç‡∏≠‡∏á AdminOrdersWindow
        admin_orders_page = AdminOrdersWindow(parent=container_frame, main_app=self)
        self.all_app_frames["AdminOrdersWindow"] = admin_orders_page
        admin_orders_page.grid(row=0, column=0, sticky="nsew")
        
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á object ‡∏Ç‡∏≠‡∏á ProfileWindow
        profile_page = ProfileWindow(parent=container_frame, main_app=self)
        self.all_app_frames["ProfileWindow"] = profile_page
        profile_page.grid(row=0, column=0, sticky="nsew")
        
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á object ‡∏Ç‡∏≠‡∏á ReceiptWindow
        receipt_page = ReceiptWindow(parent=container_frame, main_app=self)
        self.all_app_frames["ReceiptWindow"] = receipt_page
        receipt_page.grid(row=0, column=0, sticky="nsew")
        
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á object ‡∏Ç‡∏≠‡∏á AboutWindow
        about_page = AboutWindow(parent=container_frame, main_app=self)
        self.all_app_frames["AboutWindow"] = about_page
        about_page.grid(row=0, column=0, sticky="nsew")
        
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á object ‡∏Ç‡∏≠‡∏á SalesHistoryWindow
        sales_history_page = SalesHistoryWindow(parent=container_frame, main_app=self)
        self.all_app_frames["SalesHistoryWindow"] = sales_history_page
        sales_history_page.grid(row=0, column=0, sticky="nsew")
        
        print("‡∏™‡∏£‡πâ‡∏≤‡∏á Frame ‡∏ó‡∏∏‡∏Å‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß")
        
        # --- 6. ‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏ô‡πâ‡∏≤ Login ‡πÄ‡∏õ‡πá‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å ---
        self.navigate_to("LoginWindow") 

    # --- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û (‡∏¢‡πâ‡∏≤‡∏¢‡∏°‡∏≤‡∏à‡∏≤‡∏Å assets_loader) ---
    def load_image(self, image_filename, size_tuple):
        """
        ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ä‡πà‡∏ß‡∏¢‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏à‡∏≤‡∏Å‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå assets
        (‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡πÇ‡∏î‡∏¢‡∏´‡∏ô‡πâ‡∏≤ UI ‡∏ï‡πà‡∏≤‡∏á‡πÜ)
        """
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á path ‡πÄ‡∏ï‡πá‡∏°‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡πÑ‡∏ü‡∏•‡πå‡∏£‡∏π‡∏õ
        image_path = os.path.join(self.base_path, "assets", image_filename) 
        try:
            # ‡πÉ‡∏ä‡πâ PIL ‡πÄ‡∏õ‡∏¥‡∏î‡∏£‡∏π‡∏õ
            pil_image = Image.open(image_path) 
            # ‡∏™‡∏£‡πâ‡∏≤‡∏á CTkImage object ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î
            ctk_image = ctk.CTkImage(pil_image, size=size_tuple) 
            return ctk_image
        except Exception as e: # ‡∏î‡∏±‡∏Å‡∏à‡∏±‡∏ö error ‡∏ñ‡πâ‡∏≤‡∏´‡∏≤‡πÑ‡∏ü‡∏•‡πå‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠ ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏™‡∏µ‡∏¢
            print(f"‡πÄ‡∏Å‡∏¥‡∏î Error ‡∏ï‡∏≠‡∏ô‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ '{image_filename}': {e}")
            # ‡∏ñ‡πâ‡∏≤‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏π‡∏õ‡∏™‡∏µ‡πÄ‡∏ó‡∏≤‡πÅ‡∏ó‡∏ô
            placeholder_image = Image.new('RGB', size_tuple, color = 'lightgray')
            ctk_placeholder = ctk.CTkImage(placeholder_image, size=size_tuple)
            return ctk_placeholder
            
    def get_product_image(self, product_image_filename, size_tuple=(200, 200)):
        """
        ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ä‡πà‡∏ß‡∏¢‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏à‡∏≤‡∏Å assets/images
        ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠ ‡∏à‡∏∞‡πÉ‡∏ä‡πâ‡∏£‡∏π‡∏õ placeholder ‡πÅ‡∏ó‡∏ô
        """
        # ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ placeholder ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡πÑ‡∏ß‡πâ‡∏Å‡πà‡∏≠‡∏ô (‡∏à‡∏≤‡∏Å assets)
        placeholder_img = self.load_image("placeholder.png", size_tuple) 

        # ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå‡∏£‡∏π‡∏õ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏°‡∏≤ ‡∏Å‡πá‡∏Ñ‡∏∑‡∏ô placeholder ‡πÄ‡∏•‡∏¢
        if not product_image_filename:
            return placeholder_img

        # ‡∏™‡∏£‡πâ‡∏≤‡∏á path ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡πÑ‡∏ü‡∏•‡πå‡∏£‡∏π‡∏õ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô assets/images
        product_image_path = os.path.join(self.base_path, "assets", "images", product_image_filename)
        try:
            # ‡∏•‡∏≠‡∏á‡πÄ‡∏õ‡∏¥‡∏î‡∏£‡∏π‡∏õ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
            pil_product_image = Image.open(product_image_path)
            ctk_product_image = ctk.CTkImage(pil_product_image, size=size_tuple)
            return ctk_product_image
        except: # ‡∏ñ‡πâ‡∏≤‡∏´‡∏≤‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠ ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏õ‡∏¥‡∏î‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ
            # ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤ placeholder ‡∏ó‡∏µ‡πà‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ß‡πâ‡∏ï‡∏≠‡∏ô‡πÅ‡∏£‡∏Å
            return placeholder_img 
    # --- ‡∏à‡∏ö‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û ---

    def navigate_to(self, target_page_name, **extra_data):
        """
        ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠ (Frame) ‡∏≠‡∏∑‡πà‡∏ô
        target_page_name: ‡∏ä‡∏∑‡πà‡∏≠‡∏Ñ‡∏•‡∏≤‡∏™‡∏Ç‡∏≠‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÑ‡∏õ (‡πÄ‡∏ä‡πà‡∏ô "HomeWindow")
        extra_data: ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏™‡πà‡∏á‡πÑ‡∏õ‡πÉ‡∏´‡πâ‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢ (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
        """
        print(f"‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏à‡∏∞‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤: {target_page_name}, ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ô‡∏ö: {extra_data}")
        
        # ‡∏î‡∏∂‡∏á object ‡∏Ç‡∏≠‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡∏à‡∏≤‡∏Å dictionary
        target_frame = self.all_app_frames.get(target_page_name) 
        
        # ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡∏´‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡πÄ‡∏à‡∏≠‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
        if not target_frame:
            print(f"Error: ‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠ Frame ‡∏ä‡∏∑‡πà‡∏≠ '{target_page_name}'!")
            return # ‡∏´‡∏¢‡∏∏‡∏î‡∏ó‡∏≥‡∏á‡∏≤‡∏ô

        # --- ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô on_show ‡∏Ç‡∏≠‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢ (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ) ---
        # ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏´‡∏ô‡πâ‡∏≤‡∏ô‡∏±‡πâ‡∏ô‡πÜ refresh ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡πà‡∏≠‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•
        # (‡πÉ‡∏ä‡πâ try-except ‡πÅ‡∏ö‡∏ö‡∏á‡πà‡∏≤‡∏¢ ‡πÅ‡∏ó‡∏ô hasattr/callable)
        try:
            # ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å target_frame.on_show(...) ‡πÇ‡∏î‡∏¢‡∏™‡πà‡∏á extra_data ‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡∏î‡πâ‡∏ß‡∏¢
            target_frame.on_show(**extra_data) 
            print(f"‡πÄ‡∏£‡∏µ‡∏¢‡∏Å on_show() ‡∏Ç‡∏≠‡∏á {target_page_name} ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
        except AttributeError:
            # ‡∏ñ‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ô‡∏±‡πâ‡∏ô‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô on_show ‡∏Å‡πá‡πÑ‡∏°‡πà‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏£
            print(f"‡∏´‡∏ô‡πâ‡∏≤ {target_page_name} ‡πÑ‡∏°‡πà‡∏°‡∏µ on_show()") 
            pass 
        except Exception as e:
            # ‡∏ñ‡πâ‡∏≤‡πÄ‡∏Å‡∏¥‡∏î error ‡∏≠‡∏∑‡πà‡∏ô‡πÜ ‡∏ï‡∏≠‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏Å on_show
            print(f"‡πÄ‡∏Å‡∏¥‡∏î Error ‡∏ï‡∏≠‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏Å on_show() ‡∏Ç‡∏≠‡∏á {target_page_name}: {e}")

        # --- ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç: ‡∏î‡∏∂‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡∏Ç‡∏∂‡πâ‡∏ô‡∏°‡∏≤‡πÅ‡∏™‡∏î‡∏á‡∏ó‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡∏≠‡∏∑‡πà‡∏ô ---
        target_frame.tkraise() 

    def on_login_success(self, user_data_dict):
        """
        ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÇ‡∏î‡∏¢ LoginWindow ‡πÄ‡∏°‡∏∑‡πà‡∏≠ login ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
        """
        # ‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• user (dict) ‡πÄ‡∏õ‡πá‡∏ô User object (‡∏à‡∏≤‡∏Å models.py)
        user_object = User.from_dict(user_data_dict) 
        # ‡∏™‡∏±‡πà‡∏á‡πÉ‡∏´‡πâ session ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• user ‡∏ó‡∏µ‡πà login
        self.session.login(user_object) 
        print(f"Login ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: {user_object.username}, Role: {user_object.role}")
        # ‡∏™‡∏±‡πà‡∏á‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ Home
        self.navigate_to("HomeWindow") 

    def on_logout(self):
        """
        ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö
        """
        # ‡∏™‡∏±‡πà‡∏á‡πÉ‡∏´‡πâ session ‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• user
        self.session.logout() 
        # ‡∏™‡∏±‡πà‡∏á‡πÉ‡∏´‡πâ cart ‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
        self.cart.clear() 
        print("User ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏•‡πâ‡∏ß")
        # ‡∏™‡∏±‡πà‡∏á‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ Login
        self.navigate_to("LoginWindow") 

# --- ‡∏à‡∏∏‡∏î‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏° ---
# ‡πÇ‡∏Ñ‡πâ‡∏î‡∏™‡πà‡∏ß‡∏ô‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏≤‡∏£‡∏±‡∏ô‡πÑ‡∏ü‡∏•‡πå main.py ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á
if __name__ == "__main__":
    # 1. ‡∏™‡∏£‡πâ‡∏≤‡∏á object ‡∏Ç‡∏≠‡∏á MainApplication (‡∏ã‡∏∂‡πà‡∏á‡∏à‡∏∞‡πÑ‡∏õ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å __init__ ‡∏Ç‡πâ‡∏≤‡∏á‡∏ö‡∏ô)
    app = MainApplication() 
    # 2. ‡∏™‡∏±‡πà‡∏á‡πÉ‡∏´‡πâ‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥‡∏á‡∏≤‡∏ô (Event Loop)
    app.mainloop()